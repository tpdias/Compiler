Terminals which are not used

   TOKEN_ERROR


State 1 conflicts: 1 shift/reduce
State 2 conflicts: 1 shift/reduce
State 3 conflicts: 1 shift/reduce
State 31 conflicts: 5 shift/reduce, 1 reduce/reduce
State 45 conflicts: 5 shift/reduce, 1 reduce/reduce
State 95 conflicts: 5 shift/reduce
State 96 conflicts: 5 shift/reduce
State 116 conflicts: 1 shift/reduce
State 124 conflicts: 5 shift/reduce


Grammar

    0 $accept: program $end

    1 program: ldec lcode

    2 ldec: vardec ldec
    3     | vetdec ldec
    4     | fundec ldec
    5     | /* empty */

    6 lcode: code lcode
    7      | /* empty */

    8 vetdec: type TK_IDENTIFIER '[' LIT_INT ']'
    9       | type TK_IDENTIFIER '[' LIT_INT ']' lvec

   10 lvec: literal lvec
   11     | literal

   12 vardec: KW_INT TK_IDENTIFIER '=' LIT_INT
   13       | KW_CHAR TK_IDENTIFIER '=' LIT_CHAR
   14       | KW_FLOAT TK_IDENTIFIER '=' LIT_FLOAT

   15 type: KW_INT
   16     | KW_CHAR
   17     | KW_FLOAT

   18 literal: LIT_INT
   19        | LIT_CHAR
   20        | LIT_FLOAT

   21 fundec: type TK_IDENTIFIER '(' firstparam ')'

   22 firstparam: type TK_IDENTIFIER lparam
   23           | /* empty */

   24 lparam: ',' type TK_IDENTIFIER
   25       | /* empty */

   26 code: KW_CODE TK_IDENTIFIER block

   27 block: '{' lcmd '}'

   28 lcmd: cmd lcmd
   29     | /* empty */

   30 cmd: attr
   31    | ctrlflx
   32    | KW_PRINT LIT_STRING
   33    | KW_PRINT expr
   34    | KW_RETURN expr
   35    | /* empty */

   36 attr: TK_IDENTIFIER '=' expr
   37     | TK_IDENTIFIER '[' expr ']' '=' expr

   38 expr: TK_IDENTIFIER
   39     | TK_IDENTIFIER '[' expr ']'
   40     | TK_IDENTIFIER '(' l_args ')'
   41     | literal
   42     | expr '+' expr
   43     | expr '-' expr
   44     | expr '*' expr
   45     | expr '/' expr
   46     | expr '<' expr
   47     | expr '>' expr
   48     | expr OPERATOR_LE expr
   49     | expr OPERATOR_GE expr
   50     | expr OPERATOR_EQ expr
   51     | expr OPERATOR_DIF expr
   52     | expr OPERATOR_AND expr
   53     | expr OPERATOR_OR expr
   54     | OPERATOR_NOT expr
   55     | '(' expr ')'
   56     | KW_INPUT '(' type ')'

   57 l_args: /* empty */
   58       | expr l_args_end

   59 l_args_end: /* empty */
   60           | ',' expr l_args_end

   61 ctrlflx: KW_IF '(' expr ')' cmd
   62        | KW_IF '(' expr ')' cmd KW_ELSE cmd
   63        | KW_WHILE '(' expr ')' cmd


Terminals, with rules where they appear

$end (0) 0
'(' (40) 21 40 55 56 61 62 63
')' (41) 21 40 55 56 61 62 63
'*' (42) 44
'+' (43) 42
',' (44) 24 60
'-' (45) 43
'/' (47) 45
'<' (60) 46
'=' (61) 12 13 14 36 37
'>' (62) 47
'[' (91) 8 9 37 39
']' (93) 8 9 37 39
'{' (123) 27
'}' (125) 27
error (256)
KW_CHAR (258) 13 16
KW_INT (259) 12 15
KW_FLOAT (260) 14 17
KW_CODE (261) 26
KW_IF (262) 61 62
KW_ELSE (263) 62
KW_WHILE (264) 63
KW_INPUT (265) 56
KW_PRINT (266) 32 33
KW_RETURN (267) 34
OPERATOR_LE (268) 48
OPERATOR_GE (269) 49
OPERATOR_EQ (270) 50
OPERATOR_DIF (271) 51
TK_IDENTIFIER (272) 8 9 12 13 14 21 22 24 26 36 37 38 39 40
LIT_INT (273) 8 9 12 18
LIT_FLOAT (274) 14 20
LIT_CHAR (275) 13 19
LIT_STRING (276) 32
TOKEN_ERROR (277)
OPERATOR_NOT (278) 54
OPERATOR_AND (279) 52
OPERATOR_OR (280) 53


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
program (41)
    on left: 1, on right: 0
ldec (42)
    on left: 2 3 4 5, on right: 1 2 3 4
lcode (43)
    on left: 6 7, on right: 1 6
vetdec (44)
    on left: 8 9, on right: 3
lvec (45)
    on left: 10 11, on right: 9 10
vardec (46)
    on left: 12 13 14, on right: 2
type (47)
    on left: 15 16 17, on right: 8 9 21 22 24 56
literal (48)
    on left: 18 19 20, on right: 10 11 41
fundec (49)
    on left: 21, on right: 4
firstparam (50)
    on left: 22 23, on right: 21
lparam (51)
    on left: 24 25, on right: 22
code (52)
    on left: 26, on right: 6
block (53)
    on left: 27, on right: 26
lcmd (54)
    on left: 28 29, on right: 27 28
cmd (55)
    on left: 30 31 32 33 34 35, on right: 28 61 62 63
attr (56)
    on left: 36 37, on right: 30
expr (57)
    on left: 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55
    56, on right: 33 34 36 37 39 42 43 44 45 46 47 48 49 50 51 52 53
    54 55 58 60 61 62 63
l_args (58)
    on left: 57 58, on right: 40
l_args_end (59)
    on left: 59 60, on right: 58 60
ctrlflx (60)
    on left: 61 62 63, on right: 31


state 0

    0 $accept: . program $end

    KW_CHAR   shift, and go to state 1
    KW_INT    shift, and go to state 2
    KW_FLOAT  shift, and go to state 3

    $default  reduce using rule 5 (ldec)

    program  go to state 4
    ldec     go to state 5
    vetdec   go to state 6
    vardec   go to state 7
    type     go to state 8
    fundec   go to state 9


state 1

   13 vardec: KW_CHAR . TK_IDENTIFIER '=' LIT_CHAR
   16 type: KW_CHAR .

    TK_IDENTIFIER  shift, and go to state 10

    TK_IDENTIFIER  [reduce using rule 16 (type)]


state 2

   12 vardec: KW_INT . TK_IDENTIFIER '=' LIT_INT
   15 type: KW_INT .

    TK_IDENTIFIER  shift, and go to state 11

    TK_IDENTIFIER  [reduce using rule 15 (type)]


state 3

   14 vardec: KW_FLOAT . TK_IDENTIFIER '=' LIT_FLOAT
   17 type: KW_FLOAT .

    TK_IDENTIFIER  shift, and go to state 12

    TK_IDENTIFIER  [reduce using rule 17 (type)]


state 4

    0 $accept: program . $end

    $end  shift, and go to state 13


state 5

    1 program: ldec . lcode

    KW_CODE  shift, and go to state 14

    $default  reduce using rule 7 (lcode)

    lcode  go to state 15
    code   go to state 16


state 6

    3 ldec: vetdec . ldec

    KW_CHAR   shift, and go to state 1
    KW_INT    shift, and go to state 2
    KW_FLOAT  shift, and go to state 3

    $default  reduce using rule 5 (ldec)

    ldec    go to state 17
    vetdec  go to state 6
    vardec  go to state 7
    type    go to state 8
    fundec  go to state 9


state 7

    2 ldec: vardec . ldec

    KW_CHAR   shift, and go to state 1
    KW_INT    shift, and go to state 2
    KW_FLOAT  shift, and go to state 3

    $default  reduce using rule 5 (ldec)

    ldec    go to state 18
    vetdec  go to state 6
    vardec  go to state 7
    type    go to state 8
    fundec  go to state 9


state 8

    8 vetdec: type . TK_IDENTIFIER '[' LIT_INT ']'
    9       | type . TK_IDENTIFIER '[' LIT_INT ']' lvec
   21 fundec: type . TK_IDENTIFIER '(' firstparam ')'

    TK_IDENTIFIER  shift, and go to state 19


state 9

    4 ldec: fundec . ldec

    KW_CHAR   shift, and go to state 1
    KW_INT    shift, and go to state 2
    KW_FLOAT  shift, and go to state 3

    $default  reduce using rule 5 (ldec)

    ldec    go to state 20
    vetdec  go to state 6
    vardec  go to state 7
    type    go to state 8
    fundec  go to state 9


state 10

   13 vardec: KW_CHAR TK_IDENTIFIER . '=' LIT_CHAR

    '='  shift, and go to state 21


state 11

   12 vardec: KW_INT TK_IDENTIFIER . '=' LIT_INT

    '='  shift, and go to state 22


state 12

   14 vardec: KW_FLOAT TK_IDENTIFIER . '=' LIT_FLOAT

    '='  shift, and go to state 23


state 13

    0 $accept: program $end .

    $default  accept


state 14

   26 code: KW_CODE . TK_IDENTIFIER block

    TK_IDENTIFIER  shift, and go to state 24


state 15

    1 program: ldec lcode .

    $default  reduce using rule 1 (program)


state 16

    6 lcode: code . lcode

    KW_CODE  shift, and go to state 14

    $default  reduce using rule 7 (lcode)

    lcode  go to state 25
    code   go to state 16


state 17

    3 ldec: vetdec ldec .

    $default  reduce using rule 3 (ldec)


state 18

    2 ldec: vardec ldec .

    $default  reduce using rule 2 (ldec)


state 19

    8 vetdec: type TK_IDENTIFIER . '[' LIT_INT ']'
    9       | type TK_IDENTIFIER . '[' LIT_INT ']' lvec
   21 fundec: type TK_IDENTIFIER . '(' firstparam ')'

    '['  shift, and go to state 26
    '('  shift, and go to state 27


state 20

    4 ldec: fundec ldec .

    $default  reduce using rule 4 (ldec)


state 21

   13 vardec: KW_CHAR TK_IDENTIFIER '=' . LIT_CHAR

    LIT_CHAR  shift, and go to state 28


state 22

   12 vardec: KW_INT TK_IDENTIFIER '=' . LIT_INT

    LIT_INT  shift, and go to state 29


state 23

   14 vardec: KW_FLOAT TK_IDENTIFIER '=' . LIT_FLOAT

    LIT_FLOAT  shift, and go to state 30


state 24

   26 code: KW_CODE TK_IDENTIFIER . block

    '{'  shift, and go to state 31

    block  go to state 32


state 25

    6 lcode: code lcode .

    $default  reduce using rule 6 (lcode)


state 26

    8 vetdec: type TK_IDENTIFIER '[' . LIT_INT ']'
    9       | type TK_IDENTIFIER '[' . LIT_INT ']' lvec

    LIT_INT  shift, and go to state 33


state 27

   21 fundec: type TK_IDENTIFIER '(' . firstparam ')'

    KW_CHAR   shift, and go to state 34
    KW_INT    shift, and go to state 35
    KW_FLOAT  shift, and go to state 36

    $default  reduce using rule 23 (firstparam)

    type        go to state 37
    firstparam  go to state 38


state 28

   13 vardec: KW_CHAR TK_IDENTIFIER '=' LIT_CHAR .

    $default  reduce using rule 13 (vardec)


state 29

   12 vardec: KW_INT TK_IDENTIFIER '=' LIT_INT .

    $default  reduce using rule 12 (vardec)


state 30

   14 vardec: KW_FLOAT TK_IDENTIFIER '=' LIT_FLOAT .

    $default  reduce using rule 14 (vardec)


state 31

   27 block: '{' . lcmd '}'

    KW_IF          shift, and go to state 39
    KW_WHILE       shift, and go to state 40
    KW_PRINT       shift, and go to state 41
    KW_RETURN      shift, and go to state 42
    TK_IDENTIFIER  shift, and go to state 43

    KW_IF          [reduce using rule 35 (cmd)]
    KW_WHILE       [reduce using rule 35 (cmd)]
    KW_PRINT       [reduce using rule 35 (cmd)]
    KW_RETURN      [reduce using rule 35 (cmd)]
    TK_IDENTIFIER  [reduce using rule 35 (cmd)]
    '}'            reduce using rule 29 (lcmd)
    '}'            [reduce using rule 35 (cmd)]
    $default       reduce using rule 29 (lcmd)

    lcmd     go to state 44
    cmd      go to state 45
    attr     go to state 46
    ctrlflx  go to state 47


state 32

   26 code: KW_CODE TK_IDENTIFIER block .

    $default  reduce using rule 26 (code)


state 33

    8 vetdec: type TK_IDENTIFIER '[' LIT_INT . ']'
    9       | type TK_IDENTIFIER '[' LIT_INT . ']' lvec

    ']'  shift, and go to state 48


state 34

   16 type: KW_CHAR .

    $default  reduce using rule 16 (type)


state 35

   15 type: KW_INT .

    $default  reduce using rule 15 (type)


state 36

   17 type: KW_FLOAT .

    $default  reduce using rule 17 (type)


state 37

   22 firstparam: type . TK_IDENTIFIER lparam

    TK_IDENTIFIER  shift, and go to state 49


state 38

   21 fundec: type TK_IDENTIFIER '(' firstparam . ')'

    ')'  shift, and go to state 50


state 39

   61 ctrlflx: KW_IF . '(' expr ')' cmd
   62        | KW_IF . '(' expr ')' cmd KW_ELSE cmd

    '('  shift, and go to state 51


state 40

   63 ctrlflx: KW_WHILE . '(' expr ')' cmd

    '('  shift, and go to state 52


state 41

   32 cmd: KW_PRINT . LIT_STRING
   33    | KW_PRINT . expr

    KW_INPUT       shift, and go to state 53
    TK_IDENTIFIER  shift, and go to state 54
    LIT_INT        shift, and go to state 55
    LIT_FLOAT      shift, and go to state 56
    LIT_CHAR       shift, and go to state 57
    LIT_STRING     shift, and go to state 58
    OPERATOR_NOT   shift, and go to state 59
    '('            shift, and go to state 60

    literal  go to state 61
    expr     go to state 62


state 42

   34 cmd: KW_RETURN . expr

    KW_INPUT       shift, and go to state 53
    TK_IDENTIFIER  shift, and go to state 54
    LIT_INT        shift, and go to state 55
    LIT_FLOAT      shift, and go to state 56
    LIT_CHAR       shift, and go to state 57
    OPERATOR_NOT   shift, and go to state 59
    '('            shift, and go to state 60

    literal  go to state 61
    expr     go to state 63


state 43

   36 attr: TK_IDENTIFIER . '=' expr
   37     | TK_IDENTIFIER . '[' expr ']' '=' expr

    '['  shift, and go to state 64
    '='  shift, and go to state 65


state 44

   27 block: '{' lcmd . '}'

    '}'  shift, and go to state 66


state 45

   28 lcmd: cmd . lcmd

    KW_IF          shift, and go to state 39
    KW_WHILE       shift, and go to state 40
    KW_PRINT       shift, and go to state 41
    KW_RETURN      shift, and go to state 42
    TK_IDENTIFIER  shift, and go to state 43

    KW_IF          [reduce using rule 35 (cmd)]
    KW_WHILE       [reduce using rule 35 (cmd)]
    KW_PRINT       [reduce using rule 35 (cmd)]
    KW_RETURN      [reduce using rule 35 (cmd)]
    TK_IDENTIFIER  [reduce using rule 35 (cmd)]
    '}'            reduce using rule 29 (lcmd)
    '}'            [reduce using rule 35 (cmd)]
    $default       reduce using rule 29 (lcmd)

    lcmd     go to state 67
    cmd      go to state 45
    attr     go to state 46
    ctrlflx  go to state 47


state 46

   30 cmd: attr .

    $default  reduce using rule 30 (cmd)


state 47

   31 cmd: ctrlflx .

    $default  reduce using rule 31 (cmd)


state 48

    8 vetdec: type TK_IDENTIFIER '[' LIT_INT ']' .
    9       | type TK_IDENTIFIER '[' LIT_INT ']' . lvec

    LIT_INT    shift, and go to state 55
    LIT_FLOAT  shift, and go to state 56
    LIT_CHAR   shift, and go to state 57

    $default  reduce using rule 8 (vetdec)

    lvec     go to state 68
    literal  go to state 69


state 49

   22 firstparam: type TK_IDENTIFIER . lparam

    ','  shift, and go to state 70

    $default  reduce using rule 25 (lparam)

    lparam  go to state 71


state 50

   21 fundec: type TK_IDENTIFIER '(' firstparam ')' .

    $default  reduce using rule 21 (fundec)


state 51

   61 ctrlflx: KW_IF '(' . expr ')' cmd
   62        | KW_IF '(' . expr ')' cmd KW_ELSE cmd

    KW_INPUT       shift, and go to state 53
    TK_IDENTIFIER  shift, and go to state 54
    LIT_INT        shift, and go to state 55
    LIT_FLOAT      shift, and go to state 56
    LIT_CHAR       shift, and go to state 57
    OPERATOR_NOT   shift, and go to state 59
    '('            shift, and go to state 60

    literal  go to state 61
    expr     go to state 72


state 52

   63 ctrlflx: KW_WHILE '(' . expr ')' cmd

    KW_INPUT       shift, and go to state 53
    TK_IDENTIFIER  shift, and go to state 54
    LIT_INT        shift, and go to state 55
    LIT_FLOAT      shift, and go to state 56
    LIT_CHAR       shift, and go to state 57
    OPERATOR_NOT   shift, and go to state 59
    '('            shift, and go to state 60

    literal  go to state 61
    expr     go to state 73


state 53

   56 expr: KW_INPUT . '(' type ')'

    '('  shift, and go to state 74


state 54

   38 expr: TK_IDENTIFIER .
   39     | TK_IDENTIFIER . '[' expr ']'
   40     | TK_IDENTIFIER . '(' l_args ')'

    '['  shift, and go to state 75
    '('  shift, and go to state 76

    $default  reduce using rule 38 (expr)


state 55

   18 literal: LIT_INT .

    $default  reduce using rule 18 (literal)


state 56

   20 literal: LIT_FLOAT .

    $default  reduce using rule 20 (literal)


state 57

   19 literal: LIT_CHAR .

    $default  reduce using rule 19 (literal)


state 58

   32 cmd: KW_PRINT LIT_STRING .

    $default  reduce using rule 32 (cmd)


state 59

   54 expr: OPERATOR_NOT . expr

    KW_INPUT       shift, and go to state 53
    TK_IDENTIFIER  shift, and go to state 54
    LIT_INT        shift, and go to state 55
    LIT_FLOAT      shift, and go to state 56
    LIT_CHAR       shift, and go to state 57
    OPERATOR_NOT   shift, and go to state 59
    '('            shift, and go to state 60

    literal  go to state 61
    expr     go to state 77


state 60

   55 expr: '(' . expr ')'

    KW_INPUT       shift, and go to state 53
    TK_IDENTIFIER  shift, and go to state 54
    LIT_INT        shift, and go to state 55
    LIT_FLOAT      shift, and go to state 56
    LIT_CHAR       shift, and go to state 57
    OPERATOR_NOT   shift, and go to state 59
    '('            shift, and go to state 60

    literal  go to state 61
    expr     go to state 78


state 61

   41 expr: literal .

    $default  reduce using rule 41 (expr)


state 62

   33 cmd: KW_PRINT expr .
   42 expr: expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . OPERATOR_LE expr
   49     | expr . OPERATOR_GE expr
   50     | expr . OPERATOR_EQ expr
   51     | expr . OPERATOR_DIF expr
   52     | expr . OPERATOR_AND expr
   53     | expr . OPERATOR_OR expr

    OPERATOR_LE   shift, and go to state 79
    OPERATOR_GE   shift, and go to state 80
    OPERATOR_EQ   shift, and go to state 81
    OPERATOR_DIF  shift, and go to state 82
    OPERATOR_AND  shift, and go to state 83
    OPERATOR_OR   shift, and go to state 84
    '<'           shift, and go to state 85
    '>'           shift, and go to state 86
    '+'           shift, and go to state 87
    '-'           shift, and go to state 88
    '*'           shift, and go to state 89
    '/'           shift, and go to state 90

    $default  reduce using rule 33 (cmd)


state 63

   34 cmd: KW_RETURN expr .
   42 expr: expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . OPERATOR_LE expr
   49     | expr . OPERATOR_GE expr
   50     | expr . OPERATOR_EQ expr
   51     | expr . OPERATOR_DIF expr
   52     | expr . OPERATOR_AND expr
   53     | expr . OPERATOR_OR expr

    OPERATOR_LE   shift, and go to state 79
    OPERATOR_GE   shift, and go to state 80
    OPERATOR_EQ   shift, and go to state 81
    OPERATOR_DIF  shift, and go to state 82
    OPERATOR_AND  shift, and go to state 83
    OPERATOR_OR   shift, and go to state 84
    '<'           shift, and go to state 85
    '>'           shift, and go to state 86
    '+'           shift, and go to state 87
    '-'           shift, and go to state 88
    '*'           shift, and go to state 89
    '/'           shift, and go to state 90

    $default  reduce using rule 34 (cmd)


state 64

   37 attr: TK_IDENTIFIER '[' . expr ']' '=' expr

    KW_INPUT       shift, and go to state 53
    TK_IDENTIFIER  shift, and go to state 54
    LIT_INT        shift, and go to state 55
    LIT_FLOAT      shift, and go to state 56
    LIT_CHAR       shift, and go to state 57
    OPERATOR_NOT   shift, and go to state 59
    '('            shift, and go to state 60

    literal  go to state 61
    expr     go to state 91


state 65

   36 attr: TK_IDENTIFIER '=' . expr

    KW_INPUT       shift, and go to state 53
    TK_IDENTIFIER  shift, and go to state 54
    LIT_INT        shift, and go to state 55
    LIT_FLOAT      shift, and go to state 56
    LIT_CHAR       shift, and go to state 57
    OPERATOR_NOT   shift, and go to state 59
    '('            shift, and go to state 60

    literal  go to state 61
    expr     go to state 92


state 66

   27 block: '{' lcmd '}' .

    $default  reduce using rule 27 (block)


state 67

   28 lcmd: cmd lcmd .

    $default  reduce using rule 28 (lcmd)


state 68

    9 vetdec: type TK_IDENTIFIER '[' LIT_INT ']' lvec .

    $default  reduce using rule 9 (vetdec)


state 69

   10 lvec: literal . lvec
   11     | literal .

    LIT_INT    shift, and go to state 55
    LIT_FLOAT  shift, and go to state 56
    LIT_CHAR   shift, and go to state 57

    $default  reduce using rule 11 (lvec)

    lvec     go to state 93
    literal  go to state 69


state 70

   24 lparam: ',' . type TK_IDENTIFIER

    KW_CHAR   shift, and go to state 34
    KW_INT    shift, and go to state 35
    KW_FLOAT  shift, and go to state 36

    type  go to state 94


state 71

   22 firstparam: type TK_IDENTIFIER lparam .

    $default  reduce using rule 22 (firstparam)


state 72

   42 expr: expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . OPERATOR_LE expr
   49     | expr . OPERATOR_GE expr
   50     | expr . OPERATOR_EQ expr
   51     | expr . OPERATOR_DIF expr
   52     | expr . OPERATOR_AND expr
   53     | expr . OPERATOR_OR expr
   61 ctrlflx: KW_IF '(' expr . ')' cmd
   62        | KW_IF '(' expr . ')' cmd KW_ELSE cmd

    OPERATOR_LE   shift, and go to state 79
    OPERATOR_GE   shift, and go to state 80
    OPERATOR_EQ   shift, and go to state 81
    OPERATOR_DIF  shift, and go to state 82
    OPERATOR_AND  shift, and go to state 83
    OPERATOR_OR   shift, and go to state 84
    '<'           shift, and go to state 85
    '>'           shift, and go to state 86
    '+'           shift, and go to state 87
    '-'           shift, and go to state 88
    '*'           shift, and go to state 89
    '/'           shift, and go to state 90
    ')'           shift, and go to state 95


state 73

   42 expr: expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . OPERATOR_LE expr
   49     | expr . OPERATOR_GE expr
   50     | expr . OPERATOR_EQ expr
   51     | expr . OPERATOR_DIF expr
   52     | expr . OPERATOR_AND expr
   53     | expr . OPERATOR_OR expr
   63 ctrlflx: KW_WHILE '(' expr . ')' cmd

    OPERATOR_LE   shift, and go to state 79
    OPERATOR_GE   shift, and go to state 80
    OPERATOR_EQ   shift, and go to state 81
    OPERATOR_DIF  shift, and go to state 82
    OPERATOR_AND  shift, and go to state 83
    OPERATOR_OR   shift, and go to state 84
    '<'           shift, and go to state 85
    '>'           shift, and go to state 86
    '+'           shift, and go to state 87
    '-'           shift, and go to state 88
    '*'           shift, and go to state 89
    '/'           shift, and go to state 90
    ')'           shift, and go to state 96


state 74

   56 expr: KW_INPUT '(' . type ')'

    KW_CHAR   shift, and go to state 34
    KW_INT    shift, and go to state 35
    KW_FLOAT  shift, and go to state 36

    type  go to state 97


state 75

   39 expr: TK_IDENTIFIER '[' . expr ']'

    KW_INPUT       shift, and go to state 53
    TK_IDENTIFIER  shift, and go to state 54
    LIT_INT        shift, and go to state 55
    LIT_FLOAT      shift, and go to state 56
    LIT_CHAR       shift, and go to state 57
    OPERATOR_NOT   shift, and go to state 59
    '('            shift, and go to state 60

    literal  go to state 61
    expr     go to state 98


state 76

   40 expr: TK_IDENTIFIER '(' . l_args ')'

    KW_INPUT       shift, and go to state 53
    TK_IDENTIFIER  shift, and go to state 54
    LIT_INT        shift, and go to state 55
    LIT_FLOAT      shift, and go to state 56
    LIT_CHAR       shift, and go to state 57
    OPERATOR_NOT   shift, and go to state 59
    '('            shift, and go to state 60

    $default  reduce using rule 57 (l_args)

    literal  go to state 61
    expr     go to state 99
    l_args   go to state 100


state 77

   42 expr: expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . OPERATOR_LE expr
   49     | expr . OPERATOR_GE expr
   50     | expr . OPERATOR_EQ expr
   51     | expr . OPERATOR_DIF expr
   52     | expr . OPERATOR_AND expr
   53     | expr . OPERATOR_OR expr
   54     | OPERATOR_NOT expr .

    OPERATOR_LE   shift, and go to state 79
    OPERATOR_GE   shift, and go to state 80
    OPERATOR_EQ   shift, and go to state 81
    OPERATOR_DIF  shift, and go to state 82
    '<'           shift, and go to state 85
    '>'           shift, and go to state 86
    '+'           shift, and go to state 87
    '-'           shift, and go to state 88
    '*'           shift, and go to state 89
    '/'           shift, and go to state 90

    $default  reduce using rule 54 (expr)


state 78

   42 expr: expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . OPERATOR_LE expr
   49     | expr . OPERATOR_GE expr
   50     | expr . OPERATOR_EQ expr
   51     | expr . OPERATOR_DIF expr
   52     | expr . OPERATOR_AND expr
   53     | expr . OPERATOR_OR expr
   55     | '(' expr . ')'

    OPERATOR_LE   shift, and go to state 79
    OPERATOR_GE   shift, and go to state 80
    OPERATOR_EQ   shift, and go to state 81
    OPERATOR_DIF  shift, and go to state 82
    OPERATOR_AND  shift, and go to state 83
    OPERATOR_OR   shift, and go to state 84
    '<'           shift, and go to state 85
    '>'           shift, and go to state 86
    '+'           shift, and go to state 87
    '-'           shift, and go to state 88
    '*'           shift, and go to state 89
    '/'           shift, and go to state 90
    ')'           shift, and go to state 101


state 79

   48 expr: expr OPERATOR_LE . expr

    KW_INPUT       shift, and go to state 53
    TK_IDENTIFIER  shift, and go to state 54
    LIT_INT        shift, and go to state 55
    LIT_FLOAT      shift, and go to state 56
    LIT_CHAR       shift, and go to state 57
    OPERATOR_NOT   shift, and go to state 59
    '('            shift, and go to state 60

    literal  go to state 61
    expr     go to state 102


state 80

   49 expr: expr OPERATOR_GE . expr

    KW_INPUT       shift, and go to state 53
    TK_IDENTIFIER  shift, and go to state 54
    LIT_INT        shift, and go to state 55
    LIT_FLOAT      shift, and go to state 56
    LIT_CHAR       shift, and go to state 57
    OPERATOR_NOT   shift, and go to state 59
    '('            shift, and go to state 60

    literal  go to state 61
    expr     go to state 103


state 81

   50 expr: expr OPERATOR_EQ . expr

    KW_INPUT       shift, and go to state 53
    TK_IDENTIFIER  shift, and go to state 54
    LIT_INT        shift, and go to state 55
    LIT_FLOAT      shift, and go to state 56
    LIT_CHAR       shift, and go to state 57
    OPERATOR_NOT   shift, and go to state 59
    '('            shift, and go to state 60

    literal  go to state 61
    expr     go to state 104


state 82

   51 expr: expr OPERATOR_DIF . expr

    KW_INPUT       shift, and go to state 53
    TK_IDENTIFIER  shift, and go to state 54
    LIT_INT        shift, and go to state 55
    LIT_FLOAT      shift, and go to state 56
    LIT_CHAR       shift, and go to state 57
    OPERATOR_NOT   shift, and go to state 59
    '('            shift, and go to state 60

    literal  go to state 61
    expr     go to state 105


state 83

   52 expr: expr OPERATOR_AND . expr

    KW_INPUT       shift, and go to state 53
    TK_IDENTIFIER  shift, and go to state 54
    LIT_INT        shift, and go to state 55
    LIT_FLOAT      shift, and go to state 56
    LIT_CHAR       shift, and go to state 57
    OPERATOR_NOT   shift, and go to state 59
    '('            shift, and go to state 60

    literal  go to state 61
    expr     go to state 106


state 84

   53 expr: expr OPERATOR_OR . expr

    KW_INPUT       shift, and go to state 53
    TK_IDENTIFIER  shift, and go to state 54
    LIT_INT        shift, and go to state 55
    LIT_FLOAT      shift, and go to state 56
    LIT_CHAR       shift, and go to state 57
    OPERATOR_NOT   shift, and go to state 59
    '('            shift, and go to state 60

    literal  go to state 61
    expr     go to state 107


state 85

   46 expr: expr '<' . expr

    KW_INPUT       shift, and go to state 53
    TK_IDENTIFIER  shift, and go to state 54
    LIT_INT        shift, and go to state 55
    LIT_FLOAT      shift, and go to state 56
    LIT_CHAR       shift, and go to state 57
    OPERATOR_NOT   shift, and go to state 59
    '('            shift, and go to state 60

    literal  go to state 61
    expr     go to state 108


state 86

   47 expr: expr '>' . expr

    KW_INPUT       shift, and go to state 53
    TK_IDENTIFIER  shift, and go to state 54
    LIT_INT        shift, and go to state 55
    LIT_FLOAT      shift, and go to state 56
    LIT_CHAR       shift, and go to state 57
    OPERATOR_NOT   shift, and go to state 59
    '('            shift, and go to state 60

    literal  go to state 61
    expr     go to state 109


state 87

   42 expr: expr '+' . expr

    KW_INPUT       shift, and go to state 53
    TK_IDENTIFIER  shift, and go to state 54
    LIT_INT        shift, and go to state 55
    LIT_FLOAT      shift, and go to state 56
    LIT_CHAR       shift, and go to state 57
    OPERATOR_NOT   shift, and go to state 59
    '('            shift, and go to state 60

    literal  go to state 61
    expr     go to state 110


state 88

   43 expr: expr '-' . expr

    KW_INPUT       shift, and go to state 53
    TK_IDENTIFIER  shift, and go to state 54
    LIT_INT        shift, and go to state 55
    LIT_FLOAT      shift, and go to state 56
    LIT_CHAR       shift, and go to state 57
    OPERATOR_NOT   shift, and go to state 59
    '('            shift, and go to state 60

    literal  go to state 61
    expr     go to state 111


state 89

   44 expr: expr '*' . expr

    KW_INPUT       shift, and go to state 53
    TK_IDENTIFIER  shift, and go to state 54
    LIT_INT        shift, and go to state 55
    LIT_FLOAT      shift, and go to state 56
    LIT_CHAR       shift, and go to state 57
    OPERATOR_NOT   shift, and go to state 59
    '('            shift, and go to state 60

    literal  go to state 61
    expr     go to state 112


state 90

   45 expr: expr '/' . expr

    KW_INPUT       shift, and go to state 53
    TK_IDENTIFIER  shift, and go to state 54
    LIT_INT        shift, and go to state 55
    LIT_FLOAT      shift, and go to state 56
    LIT_CHAR       shift, and go to state 57
    OPERATOR_NOT   shift, and go to state 59
    '('            shift, and go to state 60

    literal  go to state 61
    expr     go to state 113


state 91

   37 attr: TK_IDENTIFIER '[' expr . ']' '=' expr
   42 expr: expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . OPERATOR_LE expr
   49     | expr . OPERATOR_GE expr
   50     | expr . OPERATOR_EQ expr
   51     | expr . OPERATOR_DIF expr
   52     | expr . OPERATOR_AND expr
   53     | expr . OPERATOR_OR expr

    OPERATOR_LE   shift, and go to state 79
    OPERATOR_GE   shift, and go to state 80
    OPERATOR_EQ   shift, and go to state 81
    OPERATOR_DIF  shift, and go to state 82
    OPERATOR_AND  shift, and go to state 83
    OPERATOR_OR   shift, and go to state 84
    '<'           shift, and go to state 85
    '>'           shift, and go to state 86
    '+'           shift, and go to state 87
    '-'           shift, and go to state 88
    '*'           shift, and go to state 89
    '/'           shift, and go to state 90
    ']'           shift, and go to state 114


state 92

   36 attr: TK_IDENTIFIER '=' expr .
   42 expr: expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . OPERATOR_LE expr
   49     | expr . OPERATOR_GE expr
   50     | expr . OPERATOR_EQ expr
   51     | expr . OPERATOR_DIF expr
   52     | expr . OPERATOR_AND expr
   53     | expr . OPERATOR_OR expr

    OPERATOR_LE   shift, and go to state 79
    OPERATOR_GE   shift, and go to state 80
    OPERATOR_EQ   shift, and go to state 81
    OPERATOR_DIF  shift, and go to state 82
    OPERATOR_AND  shift, and go to state 83
    OPERATOR_OR   shift, and go to state 84
    '<'           shift, and go to state 85
    '>'           shift, and go to state 86
    '+'           shift, and go to state 87
    '-'           shift, and go to state 88
    '*'           shift, and go to state 89
    '/'           shift, and go to state 90

    $default  reduce using rule 36 (attr)


state 93

   10 lvec: literal lvec .

    $default  reduce using rule 10 (lvec)


state 94

   24 lparam: ',' type . TK_IDENTIFIER

    TK_IDENTIFIER  shift, and go to state 115


state 95

   61 ctrlflx: KW_IF '(' expr ')' . cmd
   62        | KW_IF '(' expr ')' . cmd KW_ELSE cmd

    KW_IF          shift, and go to state 39
    KW_WHILE       shift, and go to state 40
    KW_PRINT       shift, and go to state 41
    KW_RETURN      shift, and go to state 42
    TK_IDENTIFIER  shift, and go to state 43

    KW_IF          [reduce using rule 35 (cmd)]
    KW_WHILE       [reduce using rule 35 (cmd)]
    KW_PRINT       [reduce using rule 35 (cmd)]
    KW_RETURN      [reduce using rule 35 (cmd)]
    TK_IDENTIFIER  [reduce using rule 35 (cmd)]
    $default       reduce using rule 35 (cmd)

    cmd      go to state 116
    attr     go to state 46
    ctrlflx  go to state 47


state 96

   63 ctrlflx: KW_WHILE '(' expr ')' . cmd

    KW_IF          shift, and go to state 39
    KW_WHILE       shift, and go to state 40
    KW_PRINT       shift, and go to state 41
    KW_RETURN      shift, and go to state 42
    TK_IDENTIFIER  shift, and go to state 43

    KW_IF          [reduce using rule 35 (cmd)]
    KW_WHILE       [reduce using rule 35 (cmd)]
    KW_PRINT       [reduce using rule 35 (cmd)]
    KW_RETURN      [reduce using rule 35 (cmd)]
    TK_IDENTIFIER  [reduce using rule 35 (cmd)]
    $default       reduce using rule 35 (cmd)

    cmd      go to state 117
    attr     go to state 46
    ctrlflx  go to state 47


state 97

   56 expr: KW_INPUT '(' type . ')'

    ')'  shift, and go to state 118


state 98

   39 expr: TK_IDENTIFIER '[' expr . ']'
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . OPERATOR_LE expr
   49     | expr . OPERATOR_GE expr
   50     | expr . OPERATOR_EQ expr
   51     | expr . OPERATOR_DIF expr
   52     | expr . OPERATOR_AND expr
   53     | expr . OPERATOR_OR expr

    OPERATOR_LE   shift, and go to state 79
    OPERATOR_GE   shift, and go to state 80
    OPERATOR_EQ   shift, and go to state 81
    OPERATOR_DIF  shift, and go to state 82
    OPERATOR_AND  shift, and go to state 83
    OPERATOR_OR   shift, and go to state 84
    '<'           shift, and go to state 85
    '>'           shift, and go to state 86
    '+'           shift, and go to state 87
    '-'           shift, and go to state 88
    '*'           shift, and go to state 89
    '/'           shift, and go to state 90
    ']'           shift, and go to state 119


state 99

   42 expr: expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . OPERATOR_LE expr
   49     | expr . OPERATOR_GE expr
   50     | expr . OPERATOR_EQ expr
   51     | expr . OPERATOR_DIF expr
   52     | expr . OPERATOR_AND expr
   53     | expr . OPERATOR_OR expr
   58 l_args: expr . l_args_end

    OPERATOR_LE   shift, and go to state 79
    OPERATOR_GE   shift, and go to state 80
    OPERATOR_EQ   shift, and go to state 81
    OPERATOR_DIF  shift, and go to state 82
    OPERATOR_AND  shift, and go to state 83
    OPERATOR_OR   shift, and go to state 84
    '<'           shift, and go to state 85
    '>'           shift, and go to state 86
    '+'           shift, and go to state 87
    '-'           shift, and go to state 88
    '*'           shift, and go to state 89
    '/'           shift, and go to state 90
    ','           shift, and go to state 120

    $default  reduce using rule 59 (l_args_end)

    l_args_end  go to state 121


state 100

   40 expr: TK_IDENTIFIER '(' l_args . ')'

    ')'  shift, and go to state 122


state 101

   55 expr: '(' expr ')' .

    $default  reduce using rule 55 (expr)


state 102

   42 expr: expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . OPERATOR_LE expr
   48     | expr OPERATOR_LE expr .
   49     | expr . OPERATOR_GE expr
   50     | expr . OPERATOR_EQ expr
   51     | expr . OPERATOR_DIF expr
   52     | expr . OPERATOR_AND expr
   53     | expr . OPERATOR_OR expr

    '+'  shift, and go to state 87
    '-'  shift, and go to state 88
    '*'  shift, and go to state 89
    '/'  shift, and go to state 90

    $default  reduce using rule 48 (expr)


state 103

   42 expr: expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . OPERATOR_LE expr
   49     | expr . OPERATOR_GE expr
   49     | expr OPERATOR_GE expr .
   50     | expr . OPERATOR_EQ expr
   51     | expr . OPERATOR_DIF expr
   52     | expr . OPERATOR_AND expr
   53     | expr . OPERATOR_OR expr

    '+'  shift, and go to state 87
    '-'  shift, and go to state 88
    '*'  shift, and go to state 89
    '/'  shift, and go to state 90

    $default  reduce using rule 49 (expr)


state 104

   42 expr: expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . OPERATOR_LE expr
   49     | expr . OPERATOR_GE expr
   50     | expr . OPERATOR_EQ expr
   50     | expr OPERATOR_EQ expr .
   51     | expr . OPERATOR_DIF expr
   52     | expr . OPERATOR_AND expr
   53     | expr . OPERATOR_OR expr

    '+'  shift, and go to state 87
    '-'  shift, and go to state 88
    '*'  shift, and go to state 89
    '/'  shift, and go to state 90

    $default  reduce using rule 50 (expr)


state 105

   42 expr: expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . OPERATOR_LE expr
   49     | expr . OPERATOR_GE expr
   50     | expr . OPERATOR_EQ expr
   51     | expr . OPERATOR_DIF expr
   51     | expr OPERATOR_DIF expr .
   52     | expr . OPERATOR_AND expr
   53     | expr . OPERATOR_OR expr

    '+'  shift, and go to state 87
    '-'  shift, and go to state 88
    '*'  shift, and go to state 89
    '/'  shift, and go to state 90

    $default  reduce using rule 51 (expr)


state 106

   42 expr: expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . OPERATOR_LE expr
   49     | expr . OPERATOR_GE expr
   50     | expr . OPERATOR_EQ expr
   51     | expr . OPERATOR_DIF expr
   52     | expr . OPERATOR_AND expr
   52     | expr OPERATOR_AND expr .
   53     | expr . OPERATOR_OR expr

    OPERATOR_LE   shift, and go to state 79
    OPERATOR_GE   shift, and go to state 80
    OPERATOR_EQ   shift, and go to state 81
    OPERATOR_DIF  shift, and go to state 82
    '<'           shift, and go to state 85
    '>'           shift, and go to state 86
    '+'           shift, and go to state 87
    '-'           shift, and go to state 88
    '*'           shift, and go to state 89
    '/'           shift, and go to state 90

    $default  reduce using rule 52 (expr)


state 107

   42 expr: expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . OPERATOR_LE expr
   49     | expr . OPERATOR_GE expr
   50     | expr . OPERATOR_EQ expr
   51     | expr . OPERATOR_DIF expr
   52     | expr . OPERATOR_AND expr
   53     | expr . OPERATOR_OR expr
   53     | expr OPERATOR_OR expr .

    OPERATOR_LE   shift, and go to state 79
    OPERATOR_GE   shift, and go to state 80
    OPERATOR_EQ   shift, and go to state 81
    OPERATOR_DIF  shift, and go to state 82
    '<'           shift, and go to state 85
    '>'           shift, and go to state 86
    '+'           shift, and go to state 87
    '-'           shift, and go to state 88
    '*'           shift, and go to state 89
    '/'           shift, and go to state 90

    $default  reduce using rule 53 (expr)


state 108

   42 expr: expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   46     | expr . '<' expr
   46     | expr '<' expr .
   47     | expr . '>' expr
   48     | expr . OPERATOR_LE expr
   49     | expr . OPERATOR_GE expr
   50     | expr . OPERATOR_EQ expr
   51     | expr . OPERATOR_DIF expr
   52     | expr . OPERATOR_AND expr
   53     | expr . OPERATOR_OR expr

    '+'  shift, and go to state 87
    '-'  shift, and go to state 88
    '*'  shift, and go to state 89
    '/'  shift, and go to state 90

    $default  reduce using rule 46 (expr)


state 109

   42 expr: expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   47     | expr '>' expr .
   48     | expr . OPERATOR_LE expr
   49     | expr . OPERATOR_GE expr
   50     | expr . OPERATOR_EQ expr
   51     | expr . OPERATOR_DIF expr
   52     | expr . OPERATOR_AND expr
   53     | expr . OPERATOR_OR expr

    '+'  shift, and go to state 87
    '-'  shift, and go to state 88
    '*'  shift, and go to state 89
    '/'  shift, and go to state 90

    $default  reduce using rule 47 (expr)


state 110

   42 expr: expr . '+' expr
   42     | expr '+' expr .
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . OPERATOR_LE expr
   49     | expr . OPERATOR_GE expr
   50     | expr . OPERATOR_EQ expr
   51     | expr . OPERATOR_DIF expr
   52     | expr . OPERATOR_AND expr
   53     | expr . OPERATOR_OR expr

    '*'  shift, and go to state 89
    '/'  shift, and go to state 90

    $default  reduce using rule 42 (expr)


state 111

   42 expr: expr . '+' expr
   43     | expr . '-' expr
   43     | expr '-' expr .
   44     | expr . '*' expr
   45     | expr . '/' expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . OPERATOR_LE expr
   49     | expr . OPERATOR_GE expr
   50     | expr . OPERATOR_EQ expr
   51     | expr . OPERATOR_DIF expr
   52     | expr . OPERATOR_AND expr
   53     | expr . OPERATOR_OR expr

    '*'  shift, and go to state 89
    '/'  shift, and go to state 90

    $default  reduce using rule 43 (expr)


state 112

   42 expr: expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   44     | expr '*' expr .
   45     | expr . '/' expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . OPERATOR_LE expr
   49     | expr . OPERATOR_GE expr
   50     | expr . OPERATOR_EQ expr
   51     | expr . OPERATOR_DIF expr
   52     | expr . OPERATOR_AND expr
   53     | expr . OPERATOR_OR expr

    $default  reduce using rule 44 (expr)


state 113

   42 expr: expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   45     | expr '/' expr .
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . OPERATOR_LE expr
   49     | expr . OPERATOR_GE expr
   50     | expr . OPERATOR_EQ expr
   51     | expr . OPERATOR_DIF expr
   52     | expr . OPERATOR_AND expr
   53     | expr . OPERATOR_OR expr

    $default  reduce using rule 45 (expr)


state 114

   37 attr: TK_IDENTIFIER '[' expr ']' . '=' expr

    '='  shift, and go to state 123


state 115

   24 lparam: ',' type TK_IDENTIFIER .

    $default  reduce using rule 24 (lparam)


state 116

   61 ctrlflx: KW_IF '(' expr ')' cmd .
   62        | KW_IF '(' expr ')' cmd . KW_ELSE cmd

    KW_ELSE  shift, and go to state 124

    KW_ELSE   [reduce using rule 61 (ctrlflx)]
    $default  reduce using rule 61 (ctrlflx)


state 117

   63 ctrlflx: KW_WHILE '(' expr ')' cmd .

    $default  reduce using rule 63 (ctrlflx)


state 118

   56 expr: KW_INPUT '(' type ')' .

    $default  reduce using rule 56 (expr)


state 119

   39 expr: TK_IDENTIFIER '[' expr ']' .

    $default  reduce using rule 39 (expr)


state 120

   60 l_args_end: ',' . expr l_args_end

    KW_INPUT       shift, and go to state 53
    TK_IDENTIFIER  shift, and go to state 54
    LIT_INT        shift, and go to state 55
    LIT_FLOAT      shift, and go to state 56
    LIT_CHAR       shift, and go to state 57
    OPERATOR_NOT   shift, and go to state 59
    '('            shift, and go to state 60

    literal  go to state 61
    expr     go to state 125


state 121

   58 l_args: expr l_args_end .

    $default  reduce using rule 58 (l_args)


state 122

   40 expr: TK_IDENTIFIER '(' l_args ')' .

    $default  reduce using rule 40 (expr)


state 123

   37 attr: TK_IDENTIFIER '[' expr ']' '=' . expr

    KW_INPUT       shift, and go to state 53
    TK_IDENTIFIER  shift, and go to state 54
    LIT_INT        shift, and go to state 55
    LIT_FLOAT      shift, and go to state 56
    LIT_CHAR       shift, and go to state 57
    OPERATOR_NOT   shift, and go to state 59
    '('            shift, and go to state 60

    literal  go to state 61
    expr     go to state 126


state 124

   62 ctrlflx: KW_IF '(' expr ')' cmd KW_ELSE . cmd

    KW_IF          shift, and go to state 39
    KW_WHILE       shift, and go to state 40
    KW_PRINT       shift, and go to state 41
    KW_RETURN      shift, and go to state 42
    TK_IDENTIFIER  shift, and go to state 43

    KW_IF          [reduce using rule 35 (cmd)]
    KW_WHILE       [reduce using rule 35 (cmd)]
    KW_PRINT       [reduce using rule 35 (cmd)]
    KW_RETURN      [reduce using rule 35 (cmd)]
    TK_IDENTIFIER  [reduce using rule 35 (cmd)]
    $default       reduce using rule 35 (cmd)

    cmd      go to state 127
    attr     go to state 46
    ctrlflx  go to state 47


state 125

   42 expr: expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . OPERATOR_LE expr
   49     | expr . OPERATOR_GE expr
   50     | expr . OPERATOR_EQ expr
   51     | expr . OPERATOR_DIF expr
   52     | expr . OPERATOR_AND expr
   53     | expr . OPERATOR_OR expr
   60 l_args_end: ',' expr . l_args_end

    OPERATOR_LE   shift, and go to state 79
    OPERATOR_GE   shift, and go to state 80
    OPERATOR_EQ   shift, and go to state 81
    OPERATOR_DIF  shift, and go to state 82
    OPERATOR_AND  shift, and go to state 83
    OPERATOR_OR   shift, and go to state 84
    '<'           shift, and go to state 85
    '>'           shift, and go to state 86
    '+'           shift, and go to state 87
    '-'           shift, and go to state 88
    '*'           shift, and go to state 89
    '/'           shift, and go to state 90
    ','           shift, and go to state 120

    $default  reduce using rule 59 (l_args_end)

    l_args_end  go to state 128


state 126

   37 attr: TK_IDENTIFIER '[' expr ']' '=' expr .
   42 expr: expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . OPERATOR_LE expr
   49     | expr . OPERATOR_GE expr
   50     | expr . OPERATOR_EQ expr
   51     | expr . OPERATOR_DIF expr
   52     | expr . OPERATOR_AND expr
   53     | expr . OPERATOR_OR expr

    OPERATOR_LE   shift, and go to state 79
    OPERATOR_GE   shift, and go to state 80
    OPERATOR_EQ   shift, and go to state 81
    OPERATOR_DIF  shift, and go to state 82
    OPERATOR_AND  shift, and go to state 83
    OPERATOR_OR   shift, and go to state 84
    '<'           shift, and go to state 85
    '>'           shift, and go to state 86
    '+'           shift, and go to state 87
    '-'           shift, and go to state 88
    '*'           shift, and go to state 89
    '/'           shift, and go to state 90

    $default  reduce using rule 37 (attr)


state 127

   62 ctrlflx: KW_IF '(' expr ')' cmd KW_ELSE cmd .

    $default  reduce using rule 62 (ctrlflx)


state 128

   60 l_args_end: ',' expr l_args_end .

    $default  reduce using rule 60 (l_args_end)
