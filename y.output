Terminals which are not used

   TOKEN_ERROR


State 111 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: ldecinit

    2 ldecinit: ldec lcode

    3 ldec: dec ldec
    4     | /* empty */

    5 dec: type TK_IDENTIFIER '=' lit ';'
    6    | type TK_IDENTIFIER '[' LIT_INT ']' lvec ';'
    7    | type TK_IDENTIFIER '(' parameters ')' ';'

    8 lvec: lit lvec
    9     | /* empty */

   10 type: KW_INT
   11     | KW_CHAR
   12     | KW_FLOAT

   13 lit: LIT_INT
   14    | LIT_CHAR
   15    | LIT_FLOAT

   16 parameters: /* empty */
   17           | param lastparam

   18 lastparam: /* empty */
   19          | ',' param lastparam

   20 param: type TK_IDENTIFIER

   21 lcode: KW_CODE TK_IDENTIFIER block lcode
   22      | /* empty */

   23 block: '{' lcmd '}'

   24 lcmd: cmd lcmd
   25     | /* empty */

   26 cmd: block
   27    | attr ';'
   28    | KW_PRINT LIT_STRING ';'
   29    | KW_PRINT expr ';'
   30    | KW_RETURN expr ';'
   31    | KW_IF '(' expr ')' cmd
   32    | KW_IF '(' expr ')' cmd KW_ELSE cmd
   33    | KW_WHILE '(' expr ')' cmd
   34    | ';'

   35 attr: TK_IDENTIFIER '=' expr
   36     | TK_IDENTIFIER '[' expr ']' '=' expr

   37 expr: TK_IDENTIFIER
   38     | TK_IDENTIFIER '[' expr ']'
   39     | TK_IDENTIFIER '(' l_args ')'
   40     | lit
   41     | expr '+' expr
   42     | expr '-' expr
   43     | expr '*' expr
   44     | expr '/' expr
   45     | expr '<' expr
   46     | expr '>' expr
   47     | expr OPERATOR_LE expr
   48     | expr OPERATOR_GE expr
   49     | expr OPERATOR_EQ expr
   50     | expr OPERATOR_DIF expr
   51     | expr OPERATOR_AND expr
   52     | expr OPERATOR_OR expr
   53     | OPERATOR_NOT expr
   54     | '(' expr ')'
   55     | KW_INPUT '(' type ')'

   56 l_args: /* empty */
   57       | expr l_args_end

   58 l_args_end: /* empty */
   59           | ',' expr l_args_end


Terminals, with rules where they appear

$end (0) 0
'(' (40) 7 31 32 33 39 54 55
')' (41) 7 31 32 33 39 54 55
'*' (42) 43
'+' (43) 41
',' (44) 19 59
'-' (45) 42
'/' (47) 44
';' (59) 5 6 7 27 28 29 30 34
'<' (60) 45
'=' (61) 5 35 36
'>' (62) 46
'[' (91) 6 36 38
']' (93) 6 36 38
'{' (123) 23
'}' (125) 23
error (256)
KW_CHAR (258) 11
KW_INT (259) 10
KW_FLOAT (260) 12
KW_CODE (261) 21
KW_IF (262) 31 32
KW_ELSE (263) 32
KW_WHILE (264) 33
KW_INPUT (265) 55
KW_PRINT (266) 28 29
KW_RETURN (267) 30
OPERATOR_LE (268) 47
OPERATOR_GE (269) 48
OPERATOR_EQ (270) 49
OPERATOR_DIF (271) 50
TK_IDENTIFIER (272) 5 6 7 20 21 35 36 37 38 39
LIT_INT (273) 6 13
LIT_FLOAT (274) 15
LIT_CHAR (275) 14
LIT_STRING (276) 28
TOKEN_ERROR (277)
OPERATOR_NOT (278) 53
OPERATOR_AND (279) 51
OPERATOR_OR (280) 52


Nonterminals, with rules where they appear

$accept (41)
    on left: 0
program (42)
    on left: 1, on right: 0
ldecinit (43)
    on left: 2, on right: 1
ldec (44)
    on left: 3 4, on right: 2 3
dec (45)
    on left: 5 6 7, on right: 3
lvec (46)
    on left: 8 9, on right: 6 8
type (47)
    on left: 10 11 12, on right: 5 6 7 20 55
lit (48)
    on left: 13 14 15, on right: 5 8 40
parameters (49)
    on left: 16 17, on right: 7
lastparam (50)
    on left: 18 19, on right: 17 19
param (51)
    on left: 20, on right: 17 19
lcode (52)
    on left: 21 22, on right: 2 21
block (53)
    on left: 23, on right: 21 26
lcmd (54)
    on left: 24 25, on right: 23 24
cmd (55)
    on left: 26 27 28 29 30 31 32 33 34, on right: 24 31 32 33
attr (56)
    on left: 35 36, on right: 27
expr (57)
    on left: 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54
    55, on right: 29 30 31 32 33 35 36 38 41 42 43 44 45 46 47 48 49
    50 51 52 53 54 57 59
l_args (58)
    on left: 56 57, on right: 39
l_args_end (59)
    on left: 58 59, on right: 57 59


state 0

    0 $accept: . program $end

    KW_CHAR   shift, and go to state 1
    KW_INT    shift, and go to state 2
    KW_FLOAT  shift, and go to state 3

    $default  reduce using rule 4 (ldec)

    program   go to state 4
    ldecinit  go to state 5
    ldec      go to state 6
    dec       go to state 7
    type      go to state 8


state 1

   11 type: KW_CHAR .

    $default  reduce using rule 11 (type)


state 2

   10 type: KW_INT .

    $default  reduce using rule 10 (type)


state 3

   12 type: KW_FLOAT .

    $default  reduce using rule 12 (type)


state 4

    0 $accept: program . $end

    $end  shift, and go to state 9


state 5

    1 program: ldecinit .

    $default  reduce using rule 1 (program)


state 6

    2 ldecinit: ldec . lcode

    KW_CODE  shift, and go to state 10

    $default  reduce using rule 22 (lcode)

    lcode  go to state 11


state 7

    3 ldec: dec . ldec

    KW_CHAR   shift, and go to state 1
    KW_INT    shift, and go to state 2
    KW_FLOAT  shift, and go to state 3

    $default  reduce using rule 4 (ldec)

    ldec  go to state 12
    dec   go to state 7
    type  go to state 8


state 8

    5 dec: type . TK_IDENTIFIER '=' lit ';'
    6    | type . TK_IDENTIFIER '[' LIT_INT ']' lvec ';'
    7    | type . TK_IDENTIFIER '(' parameters ')' ';'

    TK_IDENTIFIER  shift, and go to state 13


state 9

    0 $accept: program $end .

    $default  accept


state 10

   21 lcode: KW_CODE . TK_IDENTIFIER block lcode

    TK_IDENTIFIER  shift, and go to state 14


state 11

    2 ldecinit: ldec lcode .

    $default  reduce using rule 2 (ldecinit)


state 12

    3 ldec: dec ldec .

    $default  reduce using rule 3 (ldec)


state 13

    5 dec: type TK_IDENTIFIER . '=' lit ';'
    6    | type TK_IDENTIFIER . '[' LIT_INT ']' lvec ';'
    7    | type TK_IDENTIFIER . '(' parameters ')' ';'

    '='  shift, and go to state 15
    '['  shift, and go to state 16
    '('  shift, and go to state 17


state 14

   21 lcode: KW_CODE TK_IDENTIFIER . block lcode

    '{'  shift, and go to state 18

    block  go to state 19


state 15

    5 dec: type TK_IDENTIFIER '=' . lit ';'

    LIT_INT    shift, and go to state 20
    LIT_FLOAT  shift, and go to state 21
    LIT_CHAR   shift, and go to state 22

    lit  go to state 23


state 16

    6 dec: type TK_IDENTIFIER '[' . LIT_INT ']' lvec ';'

    LIT_INT  shift, and go to state 24


state 17

    7 dec: type TK_IDENTIFIER '(' . parameters ')' ';'

    KW_CHAR   shift, and go to state 1
    KW_INT    shift, and go to state 2
    KW_FLOAT  shift, and go to state 3

    $default  reduce using rule 16 (parameters)

    type        go to state 25
    parameters  go to state 26
    param       go to state 27


state 18

   23 block: '{' . lcmd '}'

    KW_IF          shift, and go to state 28
    KW_WHILE       shift, and go to state 29
    KW_PRINT       shift, and go to state 30
    KW_RETURN      shift, and go to state 31
    TK_IDENTIFIER  shift, and go to state 32
    ';'            shift, and go to state 33
    '{'            shift, and go to state 18

    $default  reduce using rule 25 (lcmd)

    block  go to state 34
    lcmd   go to state 35
    cmd    go to state 36
    attr   go to state 37


state 19

   21 lcode: KW_CODE TK_IDENTIFIER block . lcode

    KW_CODE  shift, and go to state 10

    $default  reduce using rule 22 (lcode)

    lcode  go to state 38


state 20

   13 lit: LIT_INT .

    $default  reduce using rule 13 (lit)


state 21

   15 lit: LIT_FLOAT .

    $default  reduce using rule 15 (lit)


state 22

   14 lit: LIT_CHAR .

    $default  reduce using rule 14 (lit)


state 23

    5 dec: type TK_IDENTIFIER '=' lit . ';'

    ';'  shift, and go to state 39


state 24

    6 dec: type TK_IDENTIFIER '[' LIT_INT . ']' lvec ';'

    ']'  shift, and go to state 40


state 25

   20 param: type . TK_IDENTIFIER

    TK_IDENTIFIER  shift, and go to state 41


state 26

    7 dec: type TK_IDENTIFIER '(' parameters . ')' ';'

    ')'  shift, and go to state 42


state 27

   17 parameters: param . lastparam

    ','  shift, and go to state 43

    $default  reduce using rule 18 (lastparam)

    lastparam  go to state 44


state 28

   31 cmd: KW_IF . '(' expr ')' cmd
   32    | KW_IF . '(' expr ')' cmd KW_ELSE cmd

    '('  shift, and go to state 45


state 29

   33 cmd: KW_WHILE . '(' expr ')' cmd

    '('  shift, and go to state 46


state 30

   28 cmd: KW_PRINT . LIT_STRING ';'
   29    | KW_PRINT . expr ';'

    KW_INPUT       shift, and go to state 47
    TK_IDENTIFIER  shift, and go to state 48
    LIT_INT        shift, and go to state 20
    LIT_FLOAT      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    LIT_STRING     shift, and go to state 49
    OPERATOR_NOT   shift, and go to state 50
    '('            shift, and go to state 51

    lit   go to state 52
    expr  go to state 53


state 31

   30 cmd: KW_RETURN . expr ';'

    KW_INPUT       shift, and go to state 47
    TK_IDENTIFIER  shift, and go to state 48
    LIT_INT        shift, and go to state 20
    LIT_FLOAT      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    OPERATOR_NOT   shift, and go to state 50
    '('            shift, and go to state 51

    lit   go to state 52
    expr  go to state 54


state 32

   35 attr: TK_IDENTIFIER . '=' expr
   36     | TK_IDENTIFIER . '[' expr ']' '=' expr

    '='  shift, and go to state 55
    '['  shift, and go to state 56


state 33

   34 cmd: ';' .

    $default  reduce using rule 34 (cmd)


state 34

   26 cmd: block .

    $default  reduce using rule 26 (cmd)


state 35

   23 block: '{' lcmd . '}'

    '}'  shift, and go to state 57


state 36

   24 lcmd: cmd . lcmd

    KW_IF          shift, and go to state 28
    KW_WHILE       shift, and go to state 29
    KW_PRINT       shift, and go to state 30
    KW_RETURN      shift, and go to state 31
    TK_IDENTIFIER  shift, and go to state 32
    ';'            shift, and go to state 33
    '{'            shift, and go to state 18

    $default  reduce using rule 25 (lcmd)

    block  go to state 34
    lcmd   go to state 58
    cmd    go to state 36
    attr   go to state 37


state 37

   27 cmd: attr . ';'

    ';'  shift, and go to state 59


state 38

   21 lcode: KW_CODE TK_IDENTIFIER block lcode .

    $default  reduce using rule 21 (lcode)


state 39

    5 dec: type TK_IDENTIFIER '=' lit ';' .

    $default  reduce using rule 5 (dec)


state 40

    6 dec: type TK_IDENTIFIER '[' LIT_INT ']' . lvec ';'

    LIT_INT    shift, and go to state 20
    LIT_FLOAT  shift, and go to state 21
    LIT_CHAR   shift, and go to state 22

    $default  reduce using rule 9 (lvec)

    lvec  go to state 60
    lit   go to state 61


state 41

   20 param: type TK_IDENTIFIER .

    $default  reduce using rule 20 (param)


state 42

    7 dec: type TK_IDENTIFIER '(' parameters ')' . ';'

    ';'  shift, and go to state 62


state 43

   19 lastparam: ',' . param lastparam

    KW_CHAR   shift, and go to state 1
    KW_INT    shift, and go to state 2
    KW_FLOAT  shift, and go to state 3

    type   go to state 25
    param  go to state 63


state 44

   17 parameters: param lastparam .

    $default  reduce using rule 17 (parameters)


state 45

   31 cmd: KW_IF '(' . expr ')' cmd
   32    | KW_IF '(' . expr ')' cmd KW_ELSE cmd

    KW_INPUT       shift, and go to state 47
    TK_IDENTIFIER  shift, and go to state 48
    LIT_INT        shift, and go to state 20
    LIT_FLOAT      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    OPERATOR_NOT   shift, and go to state 50
    '('            shift, and go to state 51

    lit   go to state 52
    expr  go to state 64


state 46

   33 cmd: KW_WHILE '(' . expr ')' cmd

    KW_INPUT       shift, and go to state 47
    TK_IDENTIFIER  shift, and go to state 48
    LIT_INT        shift, and go to state 20
    LIT_FLOAT      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    OPERATOR_NOT   shift, and go to state 50
    '('            shift, and go to state 51

    lit   go to state 52
    expr  go to state 65


state 47

   55 expr: KW_INPUT . '(' type ')'

    '('  shift, and go to state 66


state 48

   37 expr: TK_IDENTIFIER .
   38     | TK_IDENTIFIER . '[' expr ']'
   39     | TK_IDENTIFIER . '(' l_args ')'

    '['  shift, and go to state 67
    '('  shift, and go to state 68

    $default  reduce using rule 37 (expr)


state 49

   28 cmd: KW_PRINT LIT_STRING . ';'

    ';'  shift, and go to state 69


state 50

   53 expr: OPERATOR_NOT . expr

    KW_INPUT       shift, and go to state 47
    TK_IDENTIFIER  shift, and go to state 48
    LIT_INT        shift, and go to state 20
    LIT_FLOAT      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    OPERATOR_NOT   shift, and go to state 50
    '('            shift, and go to state 51

    lit   go to state 52
    expr  go to state 70


state 51

   54 expr: '(' . expr ')'

    KW_INPUT       shift, and go to state 47
    TK_IDENTIFIER  shift, and go to state 48
    LIT_INT        shift, and go to state 20
    LIT_FLOAT      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    OPERATOR_NOT   shift, and go to state 50
    '('            shift, and go to state 51

    lit   go to state 52
    expr  go to state 71


state 52

   40 expr: lit .

    $default  reduce using rule 40 (expr)


state 53

   29 cmd: KW_PRINT expr . ';'
   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . OPERATOR_LE expr
   48     | expr . OPERATOR_GE expr
   49     | expr . OPERATOR_EQ expr
   50     | expr . OPERATOR_DIF expr
   51     | expr . OPERATOR_AND expr
   52     | expr . OPERATOR_OR expr

    OPERATOR_LE   shift, and go to state 72
    OPERATOR_GE   shift, and go to state 73
    OPERATOR_EQ   shift, and go to state 74
    OPERATOR_DIF  shift, and go to state 75
    OPERATOR_AND  shift, and go to state 76
    OPERATOR_OR   shift, and go to state 77
    '<'           shift, and go to state 78
    '>'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    ';'           shift, and go to state 84


state 54

   30 cmd: KW_RETURN expr . ';'
   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . OPERATOR_LE expr
   48     | expr . OPERATOR_GE expr
   49     | expr . OPERATOR_EQ expr
   50     | expr . OPERATOR_DIF expr
   51     | expr . OPERATOR_AND expr
   52     | expr . OPERATOR_OR expr

    OPERATOR_LE   shift, and go to state 72
    OPERATOR_GE   shift, and go to state 73
    OPERATOR_EQ   shift, and go to state 74
    OPERATOR_DIF  shift, and go to state 75
    OPERATOR_AND  shift, and go to state 76
    OPERATOR_OR   shift, and go to state 77
    '<'           shift, and go to state 78
    '>'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    ';'           shift, and go to state 85


state 55

   35 attr: TK_IDENTIFIER '=' . expr

    KW_INPUT       shift, and go to state 47
    TK_IDENTIFIER  shift, and go to state 48
    LIT_INT        shift, and go to state 20
    LIT_FLOAT      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    OPERATOR_NOT   shift, and go to state 50
    '('            shift, and go to state 51

    lit   go to state 52
    expr  go to state 86


state 56

   36 attr: TK_IDENTIFIER '[' . expr ']' '=' expr

    KW_INPUT       shift, and go to state 47
    TK_IDENTIFIER  shift, and go to state 48
    LIT_INT        shift, and go to state 20
    LIT_FLOAT      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    OPERATOR_NOT   shift, and go to state 50
    '('            shift, and go to state 51

    lit   go to state 52
    expr  go to state 87


state 57

   23 block: '{' lcmd '}' .

    $default  reduce using rule 23 (block)


state 58

   24 lcmd: cmd lcmd .

    $default  reduce using rule 24 (lcmd)


state 59

   27 cmd: attr ';' .

    $default  reduce using rule 27 (cmd)


state 60

    6 dec: type TK_IDENTIFIER '[' LIT_INT ']' lvec . ';'

    ';'  shift, and go to state 88


state 61

    8 lvec: lit . lvec

    LIT_INT    shift, and go to state 20
    LIT_FLOAT  shift, and go to state 21
    LIT_CHAR   shift, and go to state 22

    $default  reduce using rule 9 (lvec)

    lvec  go to state 89
    lit   go to state 61


state 62

    7 dec: type TK_IDENTIFIER '(' parameters ')' ';' .

    $default  reduce using rule 7 (dec)


state 63

   19 lastparam: ',' param . lastparam

    ','  shift, and go to state 43

    $default  reduce using rule 18 (lastparam)

    lastparam  go to state 90


state 64

   31 cmd: KW_IF '(' expr . ')' cmd
   32    | KW_IF '(' expr . ')' cmd KW_ELSE cmd
   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . OPERATOR_LE expr
   48     | expr . OPERATOR_GE expr
   49     | expr . OPERATOR_EQ expr
   50     | expr . OPERATOR_DIF expr
   51     | expr . OPERATOR_AND expr
   52     | expr . OPERATOR_OR expr

    OPERATOR_LE   shift, and go to state 72
    OPERATOR_GE   shift, and go to state 73
    OPERATOR_EQ   shift, and go to state 74
    OPERATOR_DIF  shift, and go to state 75
    OPERATOR_AND  shift, and go to state 76
    OPERATOR_OR   shift, and go to state 77
    '<'           shift, and go to state 78
    '>'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    ')'           shift, and go to state 91


state 65

   33 cmd: KW_WHILE '(' expr . ')' cmd
   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . OPERATOR_LE expr
   48     | expr . OPERATOR_GE expr
   49     | expr . OPERATOR_EQ expr
   50     | expr . OPERATOR_DIF expr
   51     | expr . OPERATOR_AND expr
   52     | expr . OPERATOR_OR expr

    OPERATOR_LE   shift, and go to state 72
    OPERATOR_GE   shift, and go to state 73
    OPERATOR_EQ   shift, and go to state 74
    OPERATOR_DIF  shift, and go to state 75
    OPERATOR_AND  shift, and go to state 76
    OPERATOR_OR   shift, and go to state 77
    '<'           shift, and go to state 78
    '>'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    ')'           shift, and go to state 92


state 66

   55 expr: KW_INPUT '(' . type ')'

    KW_CHAR   shift, and go to state 1
    KW_INT    shift, and go to state 2
    KW_FLOAT  shift, and go to state 3

    type  go to state 93


state 67

   38 expr: TK_IDENTIFIER '[' . expr ']'

    KW_INPUT       shift, and go to state 47
    TK_IDENTIFIER  shift, and go to state 48
    LIT_INT        shift, and go to state 20
    LIT_FLOAT      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    OPERATOR_NOT   shift, and go to state 50
    '('            shift, and go to state 51

    lit   go to state 52
    expr  go to state 94


state 68

   39 expr: TK_IDENTIFIER '(' . l_args ')'

    KW_INPUT       shift, and go to state 47
    TK_IDENTIFIER  shift, and go to state 48
    LIT_INT        shift, and go to state 20
    LIT_FLOAT      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    OPERATOR_NOT   shift, and go to state 50
    '('            shift, and go to state 51

    $default  reduce using rule 56 (l_args)

    lit     go to state 52
    expr    go to state 95
    l_args  go to state 96


state 69

   28 cmd: KW_PRINT LIT_STRING ';' .

    $default  reduce using rule 28 (cmd)


state 70

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . OPERATOR_LE expr
   48     | expr . OPERATOR_GE expr
   49     | expr . OPERATOR_EQ expr
   50     | expr . OPERATOR_DIF expr
   51     | expr . OPERATOR_AND expr
   52     | expr . OPERATOR_OR expr
   53     | OPERATOR_NOT expr .

    OPERATOR_LE   shift, and go to state 72
    OPERATOR_GE   shift, and go to state 73
    OPERATOR_EQ   shift, and go to state 74
    OPERATOR_DIF  shift, and go to state 75
    '<'           shift, and go to state 78
    '>'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83

    $default  reduce using rule 53 (expr)


state 71

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . OPERATOR_LE expr
   48     | expr . OPERATOR_GE expr
   49     | expr . OPERATOR_EQ expr
   50     | expr . OPERATOR_DIF expr
   51     | expr . OPERATOR_AND expr
   52     | expr . OPERATOR_OR expr
   54     | '(' expr . ')'

    OPERATOR_LE   shift, and go to state 72
    OPERATOR_GE   shift, and go to state 73
    OPERATOR_EQ   shift, and go to state 74
    OPERATOR_DIF  shift, and go to state 75
    OPERATOR_AND  shift, and go to state 76
    OPERATOR_OR   shift, and go to state 77
    '<'           shift, and go to state 78
    '>'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    ')'           shift, and go to state 97


state 72

   47 expr: expr OPERATOR_LE . expr

    KW_INPUT       shift, and go to state 47
    TK_IDENTIFIER  shift, and go to state 48
    LIT_INT        shift, and go to state 20
    LIT_FLOAT      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    OPERATOR_NOT   shift, and go to state 50
    '('            shift, and go to state 51

    lit   go to state 52
    expr  go to state 98


state 73

   48 expr: expr OPERATOR_GE . expr

    KW_INPUT       shift, and go to state 47
    TK_IDENTIFIER  shift, and go to state 48
    LIT_INT        shift, and go to state 20
    LIT_FLOAT      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    OPERATOR_NOT   shift, and go to state 50
    '('            shift, and go to state 51

    lit   go to state 52
    expr  go to state 99


state 74

   49 expr: expr OPERATOR_EQ . expr

    KW_INPUT       shift, and go to state 47
    TK_IDENTIFIER  shift, and go to state 48
    LIT_INT        shift, and go to state 20
    LIT_FLOAT      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    OPERATOR_NOT   shift, and go to state 50
    '('            shift, and go to state 51

    lit   go to state 52
    expr  go to state 100


state 75

   50 expr: expr OPERATOR_DIF . expr

    KW_INPUT       shift, and go to state 47
    TK_IDENTIFIER  shift, and go to state 48
    LIT_INT        shift, and go to state 20
    LIT_FLOAT      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    OPERATOR_NOT   shift, and go to state 50
    '('            shift, and go to state 51

    lit   go to state 52
    expr  go to state 101


state 76

   51 expr: expr OPERATOR_AND . expr

    KW_INPUT       shift, and go to state 47
    TK_IDENTIFIER  shift, and go to state 48
    LIT_INT        shift, and go to state 20
    LIT_FLOAT      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    OPERATOR_NOT   shift, and go to state 50
    '('            shift, and go to state 51

    lit   go to state 52
    expr  go to state 102


state 77

   52 expr: expr OPERATOR_OR . expr

    KW_INPUT       shift, and go to state 47
    TK_IDENTIFIER  shift, and go to state 48
    LIT_INT        shift, and go to state 20
    LIT_FLOAT      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    OPERATOR_NOT   shift, and go to state 50
    '('            shift, and go to state 51

    lit   go to state 52
    expr  go to state 103


state 78

   45 expr: expr '<' . expr

    KW_INPUT       shift, and go to state 47
    TK_IDENTIFIER  shift, and go to state 48
    LIT_INT        shift, and go to state 20
    LIT_FLOAT      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    OPERATOR_NOT   shift, and go to state 50
    '('            shift, and go to state 51

    lit   go to state 52
    expr  go to state 104


state 79

   46 expr: expr '>' . expr

    KW_INPUT       shift, and go to state 47
    TK_IDENTIFIER  shift, and go to state 48
    LIT_INT        shift, and go to state 20
    LIT_FLOAT      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    OPERATOR_NOT   shift, and go to state 50
    '('            shift, and go to state 51

    lit   go to state 52
    expr  go to state 105


state 80

   41 expr: expr '+' . expr

    KW_INPUT       shift, and go to state 47
    TK_IDENTIFIER  shift, and go to state 48
    LIT_INT        shift, and go to state 20
    LIT_FLOAT      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    OPERATOR_NOT   shift, and go to state 50
    '('            shift, and go to state 51

    lit   go to state 52
    expr  go to state 106


state 81

   42 expr: expr '-' . expr

    KW_INPUT       shift, and go to state 47
    TK_IDENTIFIER  shift, and go to state 48
    LIT_INT        shift, and go to state 20
    LIT_FLOAT      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    OPERATOR_NOT   shift, and go to state 50
    '('            shift, and go to state 51

    lit   go to state 52
    expr  go to state 107


state 82

   43 expr: expr '*' . expr

    KW_INPUT       shift, and go to state 47
    TK_IDENTIFIER  shift, and go to state 48
    LIT_INT        shift, and go to state 20
    LIT_FLOAT      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    OPERATOR_NOT   shift, and go to state 50
    '('            shift, and go to state 51

    lit   go to state 52
    expr  go to state 108


state 83

   44 expr: expr '/' . expr

    KW_INPUT       shift, and go to state 47
    TK_IDENTIFIER  shift, and go to state 48
    LIT_INT        shift, and go to state 20
    LIT_FLOAT      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    OPERATOR_NOT   shift, and go to state 50
    '('            shift, and go to state 51

    lit   go to state 52
    expr  go to state 109


state 84

   29 cmd: KW_PRINT expr ';' .

    $default  reduce using rule 29 (cmd)


state 85

   30 cmd: KW_RETURN expr ';' .

    $default  reduce using rule 30 (cmd)


state 86

   35 attr: TK_IDENTIFIER '=' expr .
   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . OPERATOR_LE expr
   48     | expr . OPERATOR_GE expr
   49     | expr . OPERATOR_EQ expr
   50     | expr . OPERATOR_DIF expr
   51     | expr . OPERATOR_AND expr
   52     | expr . OPERATOR_OR expr

    OPERATOR_LE   shift, and go to state 72
    OPERATOR_GE   shift, and go to state 73
    OPERATOR_EQ   shift, and go to state 74
    OPERATOR_DIF  shift, and go to state 75
    OPERATOR_AND  shift, and go to state 76
    OPERATOR_OR   shift, and go to state 77
    '<'           shift, and go to state 78
    '>'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83

    $default  reduce using rule 35 (attr)


state 87

   36 attr: TK_IDENTIFIER '[' expr . ']' '=' expr
   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . OPERATOR_LE expr
   48     | expr . OPERATOR_GE expr
   49     | expr . OPERATOR_EQ expr
   50     | expr . OPERATOR_DIF expr
   51     | expr . OPERATOR_AND expr
   52     | expr . OPERATOR_OR expr

    OPERATOR_LE   shift, and go to state 72
    OPERATOR_GE   shift, and go to state 73
    OPERATOR_EQ   shift, and go to state 74
    OPERATOR_DIF  shift, and go to state 75
    OPERATOR_AND  shift, and go to state 76
    OPERATOR_OR   shift, and go to state 77
    '<'           shift, and go to state 78
    '>'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    ']'           shift, and go to state 110


state 88

    6 dec: type TK_IDENTIFIER '[' LIT_INT ']' lvec ';' .

    $default  reduce using rule 6 (dec)


state 89

    8 lvec: lit lvec .

    $default  reduce using rule 8 (lvec)


state 90

   19 lastparam: ',' param lastparam .

    $default  reduce using rule 19 (lastparam)


state 91

   31 cmd: KW_IF '(' expr ')' . cmd
   32    | KW_IF '(' expr ')' . cmd KW_ELSE cmd

    KW_IF          shift, and go to state 28
    KW_WHILE       shift, and go to state 29
    KW_PRINT       shift, and go to state 30
    KW_RETURN      shift, and go to state 31
    TK_IDENTIFIER  shift, and go to state 32
    ';'            shift, and go to state 33
    '{'            shift, and go to state 18

    block  go to state 34
    cmd    go to state 111
    attr   go to state 37


state 92

   33 cmd: KW_WHILE '(' expr ')' . cmd

    KW_IF          shift, and go to state 28
    KW_WHILE       shift, and go to state 29
    KW_PRINT       shift, and go to state 30
    KW_RETURN      shift, and go to state 31
    TK_IDENTIFIER  shift, and go to state 32
    ';'            shift, and go to state 33
    '{'            shift, and go to state 18

    block  go to state 34
    cmd    go to state 112
    attr   go to state 37


state 93

   55 expr: KW_INPUT '(' type . ')'

    ')'  shift, and go to state 113


state 94

   38 expr: TK_IDENTIFIER '[' expr . ']'
   41     | expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . OPERATOR_LE expr
   48     | expr . OPERATOR_GE expr
   49     | expr . OPERATOR_EQ expr
   50     | expr . OPERATOR_DIF expr
   51     | expr . OPERATOR_AND expr
   52     | expr . OPERATOR_OR expr

    OPERATOR_LE   shift, and go to state 72
    OPERATOR_GE   shift, and go to state 73
    OPERATOR_EQ   shift, and go to state 74
    OPERATOR_DIF  shift, and go to state 75
    OPERATOR_AND  shift, and go to state 76
    OPERATOR_OR   shift, and go to state 77
    '<'           shift, and go to state 78
    '>'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    ']'           shift, and go to state 114


state 95

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . OPERATOR_LE expr
   48     | expr . OPERATOR_GE expr
   49     | expr . OPERATOR_EQ expr
   50     | expr . OPERATOR_DIF expr
   51     | expr . OPERATOR_AND expr
   52     | expr . OPERATOR_OR expr
   57 l_args: expr . l_args_end

    OPERATOR_LE   shift, and go to state 72
    OPERATOR_GE   shift, and go to state 73
    OPERATOR_EQ   shift, and go to state 74
    OPERATOR_DIF  shift, and go to state 75
    OPERATOR_AND  shift, and go to state 76
    OPERATOR_OR   shift, and go to state 77
    '<'           shift, and go to state 78
    '>'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    ','           shift, and go to state 115

    $default  reduce using rule 58 (l_args_end)

    l_args_end  go to state 116


state 96

   39 expr: TK_IDENTIFIER '(' l_args . ')'

    ')'  shift, and go to state 117


state 97

   54 expr: '(' expr ')' .

    $default  reduce using rule 54 (expr)


state 98

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . OPERATOR_LE expr
   47     | expr OPERATOR_LE expr .
   48     | expr . OPERATOR_GE expr
   49     | expr . OPERATOR_EQ expr
   50     | expr . OPERATOR_DIF expr
   51     | expr . OPERATOR_AND expr
   52     | expr . OPERATOR_OR expr

    '+'  shift, and go to state 80
    '-'  shift, and go to state 81
    '*'  shift, and go to state 82
    '/'  shift, and go to state 83

    $default  reduce using rule 47 (expr)


state 99

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . OPERATOR_LE expr
   48     | expr . OPERATOR_GE expr
   48     | expr OPERATOR_GE expr .
   49     | expr . OPERATOR_EQ expr
   50     | expr . OPERATOR_DIF expr
   51     | expr . OPERATOR_AND expr
   52     | expr . OPERATOR_OR expr

    '+'  shift, and go to state 80
    '-'  shift, and go to state 81
    '*'  shift, and go to state 82
    '/'  shift, and go to state 83

    $default  reduce using rule 48 (expr)


state 100

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . OPERATOR_LE expr
   48     | expr . OPERATOR_GE expr
   49     | expr . OPERATOR_EQ expr
   49     | expr OPERATOR_EQ expr .
   50     | expr . OPERATOR_DIF expr
   51     | expr . OPERATOR_AND expr
   52     | expr . OPERATOR_OR expr

    '+'  shift, and go to state 80
    '-'  shift, and go to state 81
    '*'  shift, and go to state 82
    '/'  shift, and go to state 83

    $default  reduce using rule 49 (expr)


state 101

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . OPERATOR_LE expr
   48     | expr . OPERATOR_GE expr
   49     | expr . OPERATOR_EQ expr
   50     | expr . OPERATOR_DIF expr
   50     | expr OPERATOR_DIF expr .
   51     | expr . OPERATOR_AND expr
   52     | expr . OPERATOR_OR expr

    '+'  shift, and go to state 80
    '-'  shift, and go to state 81
    '*'  shift, and go to state 82
    '/'  shift, and go to state 83

    $default  reduce using rule 50 (expr)


state 102

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . OPERATOR_LE expr
   48     | expr . OPERATOR_GE expr
   49     | expr . OPERATOR_EQ expr
   50     | expr . OPERATOR_DIF expr
   51     | expr . OPERATOR_AND expr
   51     | expr OPERATOR_AND expr .
   52     | expr . OPERATOR_OR expr

    OPERATOR_LE   shift, and go to state 72
    OPERATOR_GE   shift, and go to state 73
    OPERATOR_EQ   shift, and go to state 74
    OPERATOR_DIF  shift, and go to state 75
    '<'           shift, and go to state 78
    '>'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83

    $default  reduce using rule 51 (expr)


state 103

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . OPERATOR_LE expr
   48     | expr . OPERATOR_GE expr
   49     | expr . OPERATOR_EQ expr
   50     | expr . OPERATOR_DIF expr
   51     | expr . OPERATOR_AND expr
   52     | expr . OPERATOR_OR expr
   52     | expr OPERATOR_OR expr .

    OPERATOR_LE   shift, and go to state 72
    OPERATOR_GE   shift, and go to state 73
    OPERATOR_EQ   shift, and go to state 74
    OPERATOR_DIF  shift, and go to state 75
    '<'           shift, and go to state 78
    '>'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83

    $default  reduce using rule 52 (expr)


state 104

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '<' expr
   45     | expr '<' expr .
   46     | expr . '>' expr
   47     | expr . OPERATOR_LE expr
   48     | expr . OPERATOR_GE expr
   49     | expr . OPERATOR_EQ expr
   50     | expr . OPERATOR_DIF expr
   51     | expr . OPERATOR_AND expr
   52     | expr . OPERATOR_OR expr

    '+'  shift, and go to state 80
    '-'  shift, and go to state 81
    '*'  shift, and go to state 82
    '/'  shift, and go to state 83

    $default  reduce using rule 45 (expr)


state 105

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   46     | expr '>' expr .
   47     | expr . OPERATOR_LE expr
   48     | expr . OPERATOR_GE expr
   49     | expr . OPERATOR_EQ expr
   50     | expr . OPERATOR_DIF expr
   51     | expr . OPERATOR_AND expr
   52     | expr . OPERATOR_OR expr

    '+'  shift, and go to state 80
    '-'  shift, and go to state 81
    '*'  shift, and go to state 82
    '/'  shift, and go to state 83

    $default  reduce using rule 46 (expr)


state 106

   41 expr: expr . '+' expr
   41     | expr '+' expr .
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . OPERATOR_LE expr
   48     | expr . OPERATOR_GE expr
   49     | expr . OPERATOR_EQ expr
   50     | expr . OPERATOR_DIF expr
   51     | expr . OPERATOR_AND expr
   52     | expr . OPERATOR_OR expr

    '*'  shift, and go to state 82
    '/'  shift, and go to state 83

    $default  reduce using rule 41 (expr)


state 107

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   42     | expr '-' expr .
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . OPERATOR_LE expr
   48     | expr . OPERATOR_GE expr
   49     | expr . OPERATOR_EQ expr
   50     | expr . OPERATOR_DIF expr
   51     | expr . OPERATOR_AND expr
   52     | expr . OPERATOR_OR expr

    '*'  shift, and go to state 82
    '/'  shift, and go to state 83

    $default  reduce using rule 42 (expr)


state 108

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   43     | expr '*' expr .
   44     | expr . '/' expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . OPERATOR_LE expr
   48     | expr . OPERATOR_GE expr
   49     | expr . OPERATOR_EQ expr
   50     | expr . OPERATOR_DIF expr
   51     | expr . OPERATOR_AND expr
   52     | expr . OPERATOR_OR expr

    $default  reduce using rule 43 (expr)


state 109

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   44     | expr '/' expr .
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . OPERATOR_LE expr
   48     | expr . OPERATOR_GE expr
   49     | expr . OPERATOR_EQ expr
   50     | expr . OPERATOR_DIF expr
   51     | expr . OPERATOR_AND expr
   52     | expr . OPERATOR_OR expr

    $default  reduce using rule 44 (expr)


state 110

   36 attr: TK_IDENTIFIER '[' expr ']' . '=' expr

    '='  shift, and go to state 118


state 111

   31 cmd: KW_IF '(' expr ')' cmd .
   32    | KW_IF '(' expr ')' cmd . KW_ELSE cmd

    KW_ELSE  shift, and go to state 119

    KW_ELSE   [reduce using rule 31 (cmd)]
    $default  reduce using rule 31 (cmd)


state 112

   33 cmd: KW_WHILE '(' expr ')' cmd .

    $default  reduce using rule 33 (cmd)


state 113

   55 expr: KW_INPUT '(' type ')' .

    $default  reduce using rule 55 (expr)


state 114

   38 expr: TK_IDENTIFIER '[' expr ']' .

    $default  reduce using rule 38 (expr)


state 115

   59 l_args_end: ',' . expr l_args_end

    KW_INPUT       shift, and go to state 47
    TK_IDENTIFIER  shift, and go to state 48
    LIT_INT        shift, and go to state 20
    LIT_FLOAT      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    OPERATOR_NOT   shift, and go to state 50
    '('            shift, and go to state 51

    lit   go to state 52
    expr  go to state 120


state 116

   57 l_args: expr l_args_end .

    $default  reduce using rule 57 (l_args)


state 117

   39 expr: TK_IDENTIFIER '(' l_args ')' .

    $default  reduce using rule 39 (expr)


state 118

   36 attr: TK_IDENTIFIER '[' expr ']' '=' . expr

    KW_INPUT       shift, and go to state 47
    TK_IDENTIFIER  shift, and go to state 48
    LIT_INT        shift, and go to state 20
    LIT_FLOAT      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    OPERATOR_NOT   shift, and go to state 50
    '('            shift, and go to state 51

    lit   go to state 52
    expr  go to state 121


state 119

   32 cmd: KW_IF '(' expr ')' cmd KW_ELSE . cmd

    KW_IF          shift, and go to state 28
    KW_WHILE       shift, and go to state 29
    KW_PRINT       shift, and go to state 30
    KW_RETURN      shift, and go to state 31
    TK_IDENTIFIER  shift, and go to state 32
    ';'            shift, and go to state 33
    '{'            shift, and go to state 18

    block  go to state 34
    cmd    go to state 122
    attr   go to state 37


state 120

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . OPERATOR_LE expr
   48     | expr . OPERATOR_GE expr
   49     | expr . OPERATOR_EQ expr
   50     | expr . OPERATOR_DIF expr
   51     | expr . OPERATOR_AND expr
   52     | expr . OPERATOR_OR expr
   59 l_args_end: ',' expr . l_args_end

    OPERATOR_LE   shift, and go to state 72
    OPERATOR_GE   shift, and go to state 73
    OPERATOR_EQ   shift, and go to state 74
    OPERATOR_DIF  shift, and go to state 75
    OPERATOR_AND  shift, and go to state 76
    OPERATOR_OR   shift, and go to state 77
    '<'           shift, and go to state 78
    '>'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    ','           shift, and go to state 115

    $default  reduce using rule 58 (l_args_end)

    l_args_end  go to state 123


state 121

   36 attr: TK_IDENTIFIER '[' expr ']' '=' expr .
   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . OPERATOR_LE expr
   48     | expr . OPERATOR_GE expr
   49     | expr . OPERATOR_EQ expr
   50     | expr . OPERATOR_DIF expr
   51     | expr . OPERATOR_AND expr
   52     | expr . OPERATOR_OR expr

    OPERATOR_LE   shift, and go to state 72
    OPERATOR_GE   shift, and go to state 73
    OPERATOR_EQ   shift, and go to state 74
    OPERATOR_DIF  shift, and go to state 75
    OPERATOR_AND  shift, and go to state 76
    OPERATOR_OR   shift, and go to state 77
    '<'           shift, and go to state 78
    '>'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83

    $default  reduce using rule 36 (attr)


state 122

   32 cmd: KW_IF '(' expr ')' cmd KW_ELSE cmd .

    $default  reduce using rule 32 (cmd)


state 123

   59 l_args_end: ',' expr l_args_end .

    $default  reduce using rule 59 (l_args_end)
