Terminals which are not used

   TOKEN_ERROR


State 113 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: ldec lcode

    2 ldec: dec ldec
    3     | /* empty */

    4 dec: type TK_IDENTIFIER '=' lit ';'
    5    | vetdec
    6    | fundec

    7 vetdec: type TK_IDENTIFIER '[' LIT_INT ']' lvec ';'

    8 lvec: lit lvec
    9     | /* empty */

   10 type: KW_INT
   11     | KW_CHAR
   12     | KW_FLOAT

   13 lit: LIT_INT
   14    | LIT_CHAR
   15    | LIT_FLOAT

   16 fundec: type TK_IDENTIFIER '(' parameters ')' ';'

   17 parameters: /* empty */
   18           | param lastparam

   19 lastparam: /* empty */
   20          | ',' param lastparam

   21 param: type TK_IDENTIFIER

   22 lcode: KW_CODE TK_IDENTIFIER block lcode
   23      | /* empty */

   24 block: '{' lcmd '}'

   25 lcmd: cmd lcmd
   26     | /* empty */

   27 cmd: block
   28    | attr ';'
   29    | ctrlflx
   30    | KW_PRINT LIT_STRING ';'
   31    | KW_PRINT expr ';'
   32    | KW_RETURN expr ';'
   33    | ';'

   34 attr: TK_IDENTIFIER '=' expr
   35     | TK_IDENTIFIER '[' expr ']' '=' expr

   36 expr: TK_IDENTIFIER
   37     | TK_IDENTIFIER '[' expr ']'
   38     | TK_IDENTIFIER '(' l_args ')'
   39     | lit
   40     | expr '+' expr
   41     | expr '-' expr
   42     | expr '*' expr
   43     | expr '/' expr
   44     | expr '<' expr
   45     | expr '>' expr
   46     | expr OPERATOR_LE expr
   47     | expr OPERATOR_GE expr
   48     | expr OPERATOR_EQ expr
   49     | expr OPERATOR_DIF expr
   50     | expr OPERATOR_AND expr
   51     | expr OPERATOR_OR expr
   52     | OPERATOR_NOT expr
   53     | '(' expr ')'
   54     | KW_INPUT '(' type ')'

   55 l_args: /* empty */
   56       | expr l_args_end

   57 l_args_end: /* empty */
   58           | ',' expr l_args_end

   59 ctrlflx: KW_IF '(' expr ')' cmd
   60        | KW_IF '(' expr ')' cmd KW_ELSE cmd
   61        | KW_WHILE '(' expr ')' cmd


Terminals, with rules where they appear

$end (0) 0
'(' (40) 16 38 53 54 59 60 61
')' (41) 16 38 53 54 59 60 61
'*' (42) 42
'+' (43) 40
',' (44) 20 58
'-' (45) 41
'/' (47) 43
';' (59) 4 7 16 28 30 31 32 33
'<' (60) 44
'=' (61) 4 34 35
'>' (62) 45
'[' (91) 7 35 37
']' (93) 7 35 37
'{' (123) 24
'}' (125) 24
error (256)
KW_CHAR (258) 11
KW_INT (259) 10
KW_FLOAT (260) 12
KW_CODE (261) 22
KW_IF (262) 59 60
KW_ELSE (263) 60
KW_WHILE (264) 61
KW_INPUT (265) 54
KW_PRINT (266) 30 31
KW_RETURN (267) 32
OPERATOR_LE (268) 46
OPERATOR_GE (269) 47
OPERATOR_EQ (270) 48
OPERATOR_DIF (271) 49
TK_IDENTIFIER (272) 4 7 16 21 22 34 35 36 37 38
LIT_INT (273) 7 13
LIT_FLOAT (274) 15
LIT_CHAR (275) 14
LIT_STRING (276) 30
TOKEN_ERROR (277)
OPERATOR_NOT (278) 52
OPERATOR_AND (279) 50
OPERATOR_OR (280) 51


Nonterminals, with rules where they appear

$accept (41)
    on left: 0
program (42)
    on left: 1, on right: 0
ldec (43)
    on left: 2 3, on right: 1 2
dec (44)
    on left: 4 5 6, on right: 2
vetdec (45)
    on left: 7, on right: 5
lvec (46)
    on left: 8 9, on right: 7 8
type (47)
    on left: 10 11 12, on right: 4 7 16 21 54
lit (48)
    on left: 13 14 15, on right: 4 8 39
fundec (49)
    on left: 16, on right: 6
parameters (50)
    on left: 17 18, on right: 16
lastparam (51)
    on left: 19 20, on right: 18 20
param (52)
    on left: 21, on right: 18 20
lcode (53)
    on left: 22 23, on right: 1 22
block (54)
    on left: 24, on right: 22 27
lcmd (55)
    on left: 25 26, on right: 24 25
cmd (56)
    on left: 27 28 29 30 31 32 33, on right: 25 59 60 61
attr (57)
    on left: 34 35, on right: 28
expr (58)
    on left: 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53
    54, on right: 31 32 34 35 37 40 41 42 43 44 45 46 47 48 49 50 51
    52 53 56 58 59 60 61
l_args (59)
    on left: 55 56, on right: 38
l_args_end (60)
    on left: 57 58, on right: 56 58
ctrlflx (61)
    on left: 59 60 61, on right: 29


state 0

    0 $accept: . program $end

    KW_CHAR   shift, and go to state 1
    KW_INT    shift, and go to state 2
    KW_FLOAT  shift, and go to state 3

    $default  reduce using rule 3 (ldec)

    program  go to state 4
    ldec     go to state 5
    dec      go to state 6
    vetdec   go to state 7
    type     go to state 8
    fundec   go to state 9


state 1

   11 type: KW_CHAR .

    $default  reduce using rule 11 (type)


state 2

   10 type: KW_INT .

    $default  reduce using rule 10 (type)


state 3

   12 type: KW_FLOAT .

    $default  reduce using rule 12 (type)


state 4

    0 $accept: program . $end

    $end  shift, and go to state 10


state 5

    1 program: ldec . lcode

    KW_CODE  shift, and go to state 11

    $default  reduce using rule 23 (lcode)

    lcode  go to state 12


state 6

    2 ldec: dec . ldec

    KW_CHAR   shift, and go to state 1
    KW_INT    shift, and go to state 2
    KW_FLOAT  shift, and go to state 3

    $default  reduce using rule 3 (ldec)

    ldec    go to state 13
    dec     go to state 6
    vetdec  go to state 7
    type    go to state 8
    fundec  go to state 9


state 7

    5 dec: vetdec .

    $default  reduce using rule 5 (dec)


state 8

    4 dec: type . TK_IDENTIFIER '=' lit ';'
    7 vetdec: type . TK_IDENTIFIER '[' LIT_INT ']' lvec ';'
   16 fundec: type . TK_IDENTIFIER '(' parameters ')' ';'

    TK_IDENTIFIER  shift, and go to state 14


state 9

    6 dec: fundec .

    $default  reduce using rule 6 (dec)


state 10

    0 $accept: program $end .

    $default  accept


state 11

   22 lcode: KW_CODE . TK_IDENTIFIER block lcode

    TK_IDENTIFIER  shift, and go to state 15


state 12

    1 program: ldec lcode .

    $default  reduce using rule 1 (program)


state 13

    2 ldec: dec ldec .

    $default  reduce using rule 2 (ldec)


state 14

    4 dec: type TK_IDENTIFIER . '=' lit ';'
    7 vetdec: type TK_IDENTIFIER . '[' LIT_INT ']' lvec ';'
   16 fundec: type TK_IDENTIFIER . '(' parameters ')' ';'

    '='  shift, and go to state 16
    '['  shift, and go to state 17
    '('  shift, and go to state 18


state 15

   22 lcode: KW_CODE TK_IDENTIFIER . block lcode

    '{'  shift, and go to state 19

    block  go to state 20


state 16

    4 dec: type TK_IDENTIFIER '=' . lit ';'

    LIT_INT    shift, and go to state 21
    LIT_FLOAT  shift, and go to state 22
    LIT_CHAR   shift, and go to state 23

    lit  go to state 24


state 17

    7 vetdec: type TK_IDENTIFIER '[' . LIT_INT ']' lvec ';'

    LIT_INT  shift, and go to state 25


state 18

   16 fundec: type TK_IDENTIFIER '(' . parameters ')' ';'

    KW_CHAR   shift, and go to state 1
    KW_INT    shift, and go to state 2
    KW_FLOAT  shift, and go to state 3

    $default  reduce using rule 17 (parameters)

    type        go to state 26
    parameters  go to state 27
    param       go to state 28


state 19

   24 block: '{' . lcmd '}'

    KW_IF          shift, and go to state 29
    KW_WHILE       shift, and go to state 30
    KW_PRINT       shift, and go to state 31
    KW_RETURN      shift, and go to state 32
    TK_IDENTIFIER  shift, and go to state 33
    ';'            shift, and go to state 34
    '{'            shift, and go to state 19

    $default  reduce using rule 26 (lcmd)

    block    go to state 35
    lcmd     go to state 36
    cmd      go to state 37
    attr     go to state 38
    ctrlflx  go to state 39


state 20

   22 lcode: KW_CODE TK_IDENTIFIER block . lcode

    KW_CODE  shift, and go to state 11

    $default  reduce using rule 23 (lcode)

    lcode  go to state 40


state 21

   13 lit: LIT_INT .

    $default  reduce using rule 13 (lit)


state 22

   15 lit: LIT_FLOAT .

    $default  reduce using rule 15 (lit)


state 23

   14 lit: LIT_CHAR .

    $default  reduce using rule 14 (lit)


state 24

    4 dec: type TK_IDENTIFIER '=' lit . ';'

    ';'  shift, and go to state 41


state 25

    7 vetdec: type TK_IDENTIFIER '[' LIT_INT . ']' lvec ';'

    ']'  shift, and go to state 42


state 26

   21 param: type . TK_IDENTIFIER

    TK_IDENTIFIER  shift, and go to state 43


state 27

   16 fundec: type TK_IDENTIFIER '(' parameters . ')' ';'

    ')'  shift, and go to state 44


state 28

   18 parameters: param . lastparam

    ','  shift, and go to state 45

    $default  reduce using rule 19 (lastparam)

    lastparam  go to state 46


state 29

   59 ctrlflx: KW_IF . '(' expr ')' cmd
   60        | KW_IF . '(' expr ')' cmd KW_ELSE cmd

    '('  shift, and go to state 47


state 30

   61 ctrlflx: KW_WHILE . '(' expr ')' cmd

    '('  shift, and go to state 48


state 31

   30 cmd: KW_PRINT . LIT_STRING ';'
   31    | KW_PRINT . expr ';'

    KW_INPUT       shift, and go to state 49
    TK_IDENTIFIER  shift, and go to state 50
    LIT_INT        shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 51
    OPERATOR_NOT   shift, and go to state 52
    '('            shift, and go to state 53

    lit   go to state 54
    expr  go to state 55


state 32

   32 cmd: KW_RETURN . expr ';'

    KW_INPUT       shift, and go to state 49
    TK_IDENTIFIER  shift, and go to state 50
    LIT_INT        shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    OPERATOR_NOT   shift, and go to state 52
    '('            shift, and go to state 53

    lit   go to state 54
    expr  go to state 56


state 33

   34 attr: TK_IDENTIFIER . '=' expr
   35     | TK_IDENTIFIER . '[' expr ']' '=' expr

    '='  shift, and go to state 57
    '['  shift, and go to state 58


state 34

   33 cmd: ';' .

    $default  reduce using rule 33 (cmd)


state 35

   27 cmd: block .

    $default  reduce using rule 27 (cmd)


state 36

   24 block: '{' lcmd . '}'

    '}'  shift, and go to state 59


state 37

   25 lcmd: cmd . lcmd

    KW_IF          shift, and go to state 29
    KW_WHILE       shift, and go to state 30
    KW_PRINT       shift, and go to state 31
    KW_RETURN      shift, and go to state 32
    TK_IDENTIFIER  shift, and go to state 33
    ';'            shift, and go to state 34
    '{'            shift, and go to state 19

    $default  reduce using rule 26 (lcmd)

    block    go to state 35
    lcmd     go to state 60
    cmd      go to state 37
    attr     go to state 38
    ctrlflx  go to state 39


state 38

   28 cmd: attr . ';'

    ';'  shift, and go to state 61


state 39

   29 cmd: ctrlflx .

    $default  reduce using rule 29 (cmd)


state 40

   22 lcode: KW_CODE TK_IDENTIFIER block lcode .

    $default  reduce using rule 22 (lcode)


state 41

    4 dec: type TK_IDENTIFIER '=' lit ';' .

    $default  reduce using rule 4 (dec)


state 42

    7 vetdec: type TK_IDENTIFIER '[' LIT_INT ']' . lvec ';'

    LIT_INT    shift, and go to state 21
    LIT_FLOAT  shift, and go to state 22
    LIT_CHAR   shift, and go to state 23

    $default  reduce using rule 9 (lvec)

    lvec  go to state 62
    lit   go to state 63


state 43

   21 param: type TK_IDENTIFIER .

    $default  reduce using rule 21 (param)


state 44

   16 fundec: type TK_IDENTIFIER '(' parameters ')' . ';'

    ';'  shift, and go to state 64


state 45

   20 lastparam: ',' . param lastparam

    KW_CHAR   shift, and go to state 1
    KW_INT    shift, and go to state 2
    KW_FLOAT  shift, and go to state 3

    type   go to state 26
    param  go to state 65


state 46

   18 parameters: param lastparam .

    $default  reduce using rule 18 (parameters)


state 47

   59 ctrlflx: KW_IF '(' . expr ')' cmd
   60        | KW_IF '(' . expr ')' cmd KW_ELSE cmd

    KW_INPUT       shift, and go to state 49
    TK_IDENTIFIER  shift, and go to state 50
    LIT_INT        shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    OPERATOR_NOT   shift, and go to state 52
    '('            shift, and go to state 53

    lit   go to state 54
    expr  go to state 66


state 48

   61 ctrlflx: KW_WHILE '(' . expr ')' cmd

    KW_INPUT       shift, and go to state 49
    TK_IDENTIFIER  shift, and go to state 50
    LIT_INT        shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    OPERATOR_NOT   shift, and go to state 52
    '('            shift, and go to state 53

    lit   go to state 54
    expr  go to state 67


state 49

   54 expr: KW_INPUT . '(' type ')'

    '('  shift, and go to state 68


state 50

   36 expr: TK_IDENTIFIER .
   37     | TK_IDENTIFIER . '[' expr ']'
   38     | TK_IDENTIFIER . '(' l_args ')'

    '['  shift, and go to state 69
    '('  shift, and go to state 70

    $default  reduce using rule 36 (expr)


state 51

   30 cmd: KW_PRINT LIT_STRING . ';'

    ';'  shift, and go to state 71


state 52

   52 expr: OPERATOR_NOT . expr

    KW_INPUT       shift, and go to state 49
    TK_IDENTIFIER  shift, and go to state 50
    LIT_INT        shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    OPERATOR_NOT   shift, and go to state 52
    '('            shift, and go to state 53

    lit   go to state 54
    expr  go to state 72


state 53

   53 expr: '(' . expr ')'

    KW_INPUT       shift, and go to state 49
    TK_IDENTIFIER  shift, and go to state 50
    LIT_INT        shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    OPERATOR_NOT   shift, and go to state 52
    '('            shift, and go to state 53

    lit   go to state 54
    expr  go to state 73


state 54

   39 expr: lit .

    $default  reduce using rule 39 (expr)


state 55

   31 cmd: KW_PRINT expr . ';'
   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . OPERATOR_LE expr
   47     | expr . OPERATOR_GE expr
   48     | expr . OPERATOR_EQ expr
   49     | expr . OPERATOR_DIF expr
   50     | expr . OPERATOR_AND expr
   51     | expr . OPERATOR_OR expr

    OPERATOR_LE   shift, and go to state 74
    OPERATOR_GE   shift, and go to state 75
    OPERATOR_EQ   shift, and go to state 76
    OPERATOR_DIF  shift, and go to state 77
    OPERATOR_AND  shift, and go to state 78
    OPERATOR_OR   shift, and go to state 79
    '<'           shift, and go to state 80
    '>'           shift, and go to state 81
    '+'           shift, and go to state 82
    '-'           shift, and go to state 83
    '*'           shift, and go to state 84
    '/'           shift, and go to state 85
    ';'           shift, and go to state 86


state 56

   32 cmd: KW_RETURN expr . ';'
   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . OPERATOR_LE expr
   47     | expr . OPERATOR_GE expr
   48     | expr . OPERATOR_EQ expr
   49     | expr . OPERATOR_DIF expr
   50     | expr . OPERATOR_AND expr
   51     | expr . OPERATOR_OR expr

    OPERATOR_LE   shift, and go to state 74
    OPERATOR_GE   shift, and go to state 75
    OPERATOR_EQ   shift, and go to state 76
    OPERATOR_DIF  shift, and go to state 77
    OPERATOR_AND  shift, and go to state 78
    OPERATOR_OR   shift, and go to state 79
    '<'           shift, and go to state 80
    '>'           shift, and go to state 81
    '+'           shift, and go to state 82
    '-'           shift, and go to state 83
    '*'           shift, and go to state 84
    '/'           shift, and go to state 85
    ';'           shift, and go to state 87


state 57

   34 attr: TK_IDENTIFIER '=' . expr

    KW_INPUT       shift, and go to state 49
    TK_IDENTIFIER  shift, and go to state 50
    LIT_INT        shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    OPERATOR_NOT   shift, and go to state 52
    '('            shift, and go to state 53

    lit   go to state 54
    expr  go to state 88


state 58

   35 attr: TK_IDENTIFIER '[' . expr ']' '=' expr

    KW_INPUT       shift, and go to state 49
    TK_IDENTIFIER  shift, and go to state 50
    LIT_INT        shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    OPERATOR_NOT   shift, and go to state 52
    '('            shift, and go to state 53

    lit   go to state 54
    expr  go to state 89


state 59

   24 block: '{' lcmd '}' .

    $default  reduce using rule 24 (block)


state 60

   25 lcmd: cmd lcmd .

    $default  reduce using rule 25 (lcmd)


state 61

   28 cmd: attr ';' .

    $default  reduce using rule 28 (cmd)


state 62

    7 vetdec: type TK_IDENTIFIER '[' LIT_INT ']' lvec . ';'

    ';'  shift, and go to state 90


state 63

    8 lvec: lit . lvec

    LIT_INT    shift, and go to state 21
    LIT_FLOAT  shift, and go to state 22
    LIT_CHAR   shift, and go to state 23

    $default  reduce using rule 9 (lvec)

    lvec  go to state 91
    lit   go to state 63


state 64

   16 fundec: type TK_IDENTIFIER '(' parameters ')' ';' .

    $default  reduce using rule 16 (fundec)


state 65

   20 lastparam: ',' param . lastparam

    ','  shift, and go to state 45

    $default  reduce using rule 19 (lastparam)

    lastparam  go to state 92


state 66

   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . OPERATOR_LE expr
   47     | expr . OPERATOR_GE expr
   48     | expr . OPERATOR_EQ expr
   49     | expr . OPERATOR_DIF expr
   50     | expr . OPERATOR_AND expr
   51     | expr . OPERATOR_OR expr
   59 ctrlflx: KW_IF '(' expr . ')' cmd
   60        | KW_IF '(' expr . ')' cmd KW_ELSE cmd

    OPERATOR_LE   shift, and go to state 74
    OPERATOR_GE   shift, and go to state 75
    OPERATOR_EQ   shift, and go to state 76
    OPERATOR_DIF  shift, and go to state 77
    OPERATOR_AND  shift, and go to state 78
    OPERATOR_OR   shift, and go to state 79
    '<'           shift, and go to state 80
    '>'           shift, and go to state 81
    '+'           shift, and go to state 82
    '-'           shift, and go to state 83
    '*'           shift, and go to state 84
    '/'           shift, and go to state 85
    ')'           shift, and go to state 93


state 67

   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . OPERATOR_LE expr
   47     | expr . OPERATOR_GE expr
   48     | expr . OPERATOR_EQ expr
   49     | expr . OPERATOR_DIF expr
   50     | expr . OPERATOR_AND expr
   51     | expr . OPERATOR_OR expr
   61 ctrlflx: KW_WHILE '(' expr . ')' cmd

    OPERATOR_LE   shift, and go to state 74
    OPERATOR_GE   shift, and go to state 75
    OPERATOR_EQ   shift, and go to state 76
    OPERATOR_DIF  shift, and go to state 77
    OPERATOR_AND  shift, and go to state 78
    OPERATOR_OR   shift, and go to state 79
    '<'           shift, and go to state 80
    '>'           shift, and go to state 81
    '+'           shift, and go to state 82
    '-'           shift, and go to state 83
    '*'           shift, and go to state 84
    '/'           shift, and go to state 85
    ')'           shift, and go to state 94


state 68

   54 expr: KW_INPUT '(' . type ')'

    KW_CHAR   shift, and go to state 1
    KW_INT    shift, and go to state 2
    KW_FLOAT  shift, and go to state 3

    type  go to state 95


state 69

   37 expr: TK_IDENTIFIER '[' . expr ']'

    KW_INPUT       shift, and go to state 49
    TK_IDENTIFIER  shift, and go to state 50
    LIT_INT        shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    OPERATOR_NOT   shift, and go to state 52
    '('            shift, and go to state 53

    lit   go to state 54
    expr  go to state 96


state 70

   38 expr: TK_IDENTIFIER '(' . l_args ')'

    KW_INPUT       shift, and go to state 49
    TK_IDENTIFIER  shift, and go to state 50
    LIT_INT        shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    OPERATOR_NOT   shift, and go to state 52
    '('            shift, and go to state 53

    $default  reduce using rule 55 (l_args)

    lit     go to state 54
    expr    go to state 97
    l_args  go to state 98


state 71

   30 cmd: KW_PRINT LIT_STRING ';' .

    $default  reduce using rule 30 (cmd)


state 72

   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . OPERATOR_LE expr
   47     | expr . OPERATOR_GE expr
   48     | expr . OPERATOR_EQ expr
   49     | expr . OPERATOR_DIF expr
   50     | expr . OPERATOR_AND expr
   51     | expr . OPERATOR_OR expr
   52     | OPERATOR_NOT expr .

    OPERATOR_LE   shift, and go to state 74
    OPERATOR_GE   shift, and go to state 75
    OPERATOR_EQ   shift, and go to state 76
    OPERATOR_DIF  shift, and go to state 77
    '<'           shift, and go to state 80
    '>'           shift, and go to state 81
    '+'           shift, and go to state 82
    '-'           shift, and go to state 83
    '*'           shift, and go to state 84
    '/'           shift, and go to state 85

    $default  reduce using rule 52 (expr)


state 73

   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . OPERATOR_LE expr
   47     | expr . OPERATOR_GE expr
   48     | expr . OPERATOR_EQ expr
   49     | expr . OPERATOR_DIF expr
   50     | expr . OPERATOR_AND expr
   51     | expr . OPERATOR_OR expr
   53     | '(' expr . ')'

    OPERATOR_LE   shift, and go to state 74
    OPERATOR_GE   shift, and go to state 75
    OPERATOR_EQ   shift, and go to state 76
    OPERATOR_DIF  shift, and go to state 77
    OPERATOR_AND  shift, and go to state 78
    OPERATOR_OR   shift, and go to state 79
    '<'           shift, and go to state 80
    '>'           shift, and go to state 81
    '+'           shift, and go to state 82
    '-'           shift, and go to state 83
    '*'           shift, and go to state 84
    '/'           shift, and go to state 85
    ')'           shift, and go to state 99


state 74

   46 expr: expr OPERATOR_LE . expr

    KW_INPUT       shift, and go to state 49
    TK_IDENTIFIER  shift, and go to state 50
    LIT_INT        shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    OPERATOR_NOT   shift, and go to state 52
    '('            shift, and go to state 53

    lit   go to state 54
    expr  go to state 100


state 75

   47 expr: expr OPERATOR_GE . expr

    KW_INPUT       shift, and go to state 49
    TK_IDENTIFIER  shift, and go to state 50
    LIT_INT        shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    OPERATOR_NOT   shift, and go to state 52
    '('            shift, and go to state 53

    lit   go to state 54
    expr  go to state 101


state 76

   48 expr: expr OPERATOR_EQ . expr

    KW_INPUT       shift, and go to state 49
    TK_IDENTIFIER  shift, and go to state 50
    LIT_INT        shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    OPERATOR_NOT   shift, and go to state 52
    '('            shift, and go to state 53

    lit   go to state 54
    expr  go to state 102


state 77

   49 expr: expr OPERATOR_DIF . expr

    KW_INPUT       shift, and go to state 49
    TK_IDENTIFIER  shift, and go to state 50
    LIT_INT        shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    OPERATOR_NOT   shift, and go to state 52
    '('            shift, and go to state 53

    lit   go to state 54
    expr  go to state 103


state 78

   50 expr: expr OPERATOR_AND . expr

    KW_INPUT       shift, and go to state 49
    TK_IDENTIFIER  shift, and go to state 50
    LIT_INT        shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    OPERATOR_NOT   shift, and go to state 52
    '('            shift, and go to state 53

    lit   go to state 54
    expr  go to state 104


state 79

   51 expr: expr OPERATOR_OR . expr

    KW_INPUT       shift, and go to state 49
    TK_IDENTIFIER  shift, and go to state 50
    LIT_INT        shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    OPERATOR_NOT   shift, and go to state 52
    '('            shift, and go to state 53

    lit   go to state 54
    expr  go to state 105


state 80

   44 expr: expr '<' . expr

    KW_INPUT       shift, and go to state 49
    TK_IDENTIFIER  shift, and go to state 50
    LIT_INT        shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    OPERATOR_NOT   shift, and go to state 52
    '('            shift, and go to state 53

    lit   go to state 54
    expr  go to state 106


state 81

   45 expr: expr '>' . expr

    KW_INPUT       shift, and go to state 49
    TK_IDENTIFIER  shift, and go to state 50
    LIT_INT        shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    OPERATOR_NOT   shift, and go to state 52
    '('            shift, and go to state 53

    lit   go to state 54
    expr  go to state 107


state 82

   40 expr: expr '+' . expr

    KW_INPUT       shift, and go to state 49
    TK_IDENTIFIER  shift, and go to state 50
    LIT_INT        shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    OPERATOR_NOT   shift, and go to state 52
    '('            shift, and go to state 53

    lit   go to state 54
    expr  go to state 108


state 83

   41 expr: expr '-' . expr

    KW_INPUT       shift, and go to state 49
    TK_IDENTIFIER  shift, and go to state 50
    LIT_INT        shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    OPERATOR_NOT   shift, and go to state 52
    '('            shift, and go to state 53

    lit   go to state 54
    expr  go to state 109


state 84

   42 expr: expr '*' . expr

    KW_INPUT       shift, and go to state 49
    TK_IDENTIFIER  shift, and go to state 50
    LIT_INT        shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    OPERATOR_NOT   shift, and go to state 52
    '('            shift, and go to state 53

    lit   go to state 54
    expr  go to state 110


state 85

   43 expr: expr '/' . expr

    KW_INPUT       shift, and go to state 49
    TK_IDENTIFIER  shift, and go to state 50
    LIT_INT        shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    OPERATOR_NOT   shift, and go to state 52
    '('            shift, and go to state 53

    lit   go to state 54
    expr  go to state 111


state 86

   31 cmd: KW_PRINT expr ';' .

    $default  reduce using rule 31 (cmd)


state 87

   32 cmd: KW_RETURN expr ';' .

    $default  reduce using rule 32 (cmd)


state 88

   34 attr: TK_IDENTIFIER '=' expr .
   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . OPERATOR_LE expr
   47     | expr . OPERATOR_GE expr
   48     | expr . OPERATOR_EQ expr
   49     | expr . OPERATOR_DIF expr
   50     | expr . OPERATOR_AND expr
   51     | expr . OPERATOR_OR expr

    OPERATOR_LE   shift, and go to state 74
    OPERATOR_GE   shift, and go to state 75
    OPERATOR_EQ   shift, and go to state 76
    OPERATOR_DIF  shift, and go to state 77
    OPERATOR_AND  shift, and go to state 78
    OPERATOR_OR   shift, and go to state 79
    '<'           shift, and go to state 80
    '>'           shift, and go to state 81
    '+'           shift, and go to state 82
    '-'           shift, and go to state 83
    '*'           shift, and go to state 84
    '/'           shift, and go to state 85

    $default  reduce using rule 34 (attr)


state 89

   35 attr: TK_IDENTIFIER '[' expr . ']' '=' expr
   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . OPERATOR_LE expr
   47     | expr . OPERATOR_GE expr
   48     | expr . OPERATOR_EQ expr
   49     | expr . OPERATOR_DIF expr
   50     | expr . OPERATOR_AND expr
   51     | expr . OPERATOR_OR expr

    OPERATOR_LE   shift, and go to state 74
    OPERATOR_GE   shift, and go to state 75
    OPERATOR_EQ   shift, and go to state 76
    OPERATOR_DIF  shift, and go to state 77
    OPERATOR_AND  shift, and go to state 78
    OPERATOR_OR   shift, and go to state 79
    '<'           shift, and go to state 80
    '>'           shift, and go to state 81
    '+'           shift, and go to state 82
    '-'           shift, and go to state 83
    '*'           shift, and go to state 84
    '/'           shift, and go to state 85
    ']'           shift, and go to state 112


state 90

    7 vetdec: type TK_IDENTIFIER '[' LIT_INT ']' lvec ';' .

    $default  reduce using rule 7 (vetdec)


state 91

    8 lvec: lit lvec .

    $default  reduce using rule 8 (lvec)


state 92

   20 lastparam: ',' param lastparam .

    $default  reduce using rule 20 (lastparam)


state 93

   59 ctrlflx: KW_IF '(' expr ')' . cmd
   60        | KW_IF '(' expr ')' . cmd KW_ELSE cmd

    KW_IF          shift, and go to state 29
    KW_WHILE       shift, and go to state 30
    KW_PRINT       shift, and go to state 31
    KW_RETURN      shift, and go to state 32
    TK_IDENTIFIER  shift, and go to state 33
    ';'            shift, and go to state 34
    '{'            shift, and go to state 19

    block    go to state 35
    cmd      go to state 113
    attr     go to state 38
    ctrlflx  go to state 39


state 94

   61 ctrlflx: KW_WHILE '(' expr ')' . cmd

    KW_IF          shift, and go to state 29
    KW_WHILE       shift, and go to state 30
    KW_PRINT       shift, and go to state 31
    KW_RETURN      shift, and go to state 32
    TK_IDENTIFIER  shift, and go to state 33
    ';'            shift, and go to state 34
    '{'            shift, and go to state 19

    block    go to state 35
    cmd      go to state 114
    attr     go to state 38
    ctrlflx  go to state 39


state 95

   54 expr: KW_INPUT '(' type . ')'

    ')'  shift, and go to state 115


state 96

   37 expr: TK_IDENTIFIER '[' expr . ']'
   40     | expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . OPERATOR_LE expr
   47     | expr . OPERATOR_GE expr
   48     | expr . OPERATOR_EQ expr
   49     | expr . OPERATOR_DIF expr
   50     | expr . OPERATOR_AND expr
   51     | expr . OPERATOR_OR expr

    OPERATOR_LE   shift, and go to state 74
    OPERATOR_GE   shift, and go to state 75
    OPERATOR_EQ   shift, and go to state 76
    OPERATOR_DIF  shift, and go to state 77
    OPERATOR_AND  shift, and go to state 78
    OPERATOR_OR   shift, and go to state 79
    '<'           shift, and go to state 80
    '>'           shift, and go to state 81
    '+'           shift, and go to state 82
    '-'           shift, and go to state 83
    '*'           shift, and go to state 84
    '/'           shift, and go to state 85
    ']'           shift, and go to state 116


state 97

   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . OPERATOR_LE expr
   47     | expr . OPERATOR_GE expr
   48     | expr . OPERATOR_EQ expr
   49     | expr . OPERATOR_DIF expr
   50     | expr . OPERATOR_AND expr
   51     | expr . OPERATOR_OR expr
   56 l_args: expr . l_args_end

    OPERATOR_LE   shift, and go to state 74
    OPERATOR_GE   shift, and go to state 75
    OPERATOR_EQ   shift, and go to state 76
    OPERATOR_DIF  shift, and go to state 77
    OPERATOR_AND  shift, and go to state 78
    OPERATOR_OR   shift, and go to state 79
    '<'           shift, and go to state 80
    '>'           shift, and go to state 81
    '+'           shift, and go to state 82
    '-'           shift, and go to state 83
    '*'           shift, and go to state 84
    '/'           shift, and go to state 85
    ','           shift, and go to state 117

    $default  reduce using rule 57 (l_args_end)

    l_args_end  go to state 118


state 98

   38 expr: TK_IDENTIFIER '(' l_args . ')'

    ')'  shift, and go to state 119


state 99

   53 expr: '(' expr ')' .

    $default  reduce using rule 53 (expr)


state 100

   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . OPERATOR_LE expr
   46     | expr OPERATOR_LE expr .
   47     | expr . OPERATOR_GE expr
   48     | expr . OPERATOR_EQ expr
   49     | expr . OPERATOR_DIF expr
   50     | expr . OPERATOR_AND expr
   51     | expr . OPERATOR_OR expr

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '*'  shift, and go to state 84
    '/'  shift, and go to state 85

    $default  reduce using rule 46 (expr)


state 101

   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . OPERATOR_LE expr
   47     | expr . OPERATOR_GE expr
   47     | expr OPERATOR_GE expr .
   48     | expr . OPERATOR_EQ expr
   49     | expr . OPERATOR_DIF expr
   50     | expr . OPERATOR_AND expr
   51     | expr . OPERATOR_OR expr

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '*'  shift, and go to state 84
    '/'  shift, and go to state 85

    $default  reduce using rule 47 (expr)


state 102

   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . OPERATOR_LE expr
   47     | expr . OPERATOR_GE expr
   48     | expr . OPERATOR_EQ expr
   48     | expr OPERATOR_EQ expr .
   49     | expr . OPERATOR_DIF expr
   50     | expr . OPERATOR_AND expr
   51     | expr . OPERATOR_OR expr

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '*'  shift, and go to state 84
    '/'  shift, and go to state 85

    $default  reduce using rule 48 (expr)


state 103

   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . OPERATOR_LE expr
   47     | expr . OPERATOR_GE expr
   48     | expr . OPERATOR_EQ expr
   49     | expr . OPERATOR_DIF expr
   49     | expr OPERATOR_DIF expr .
   50     | expr . OPERATOR_AND expr
   51     | expr . OPERATOR_OR expr

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '*'  shift, and go to state 84
    '/'  shift, and go to state 85

    $default  reduce using rule 49 (expr)


state 104

   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . OPERATOR_LE expr
   47     | expr . OPERATOR_GE expr
   48     | expr . OPERATOR_EQ expr
   49     | expr . OPERATOR_DIF expr
   50     | expr . OPERATOR_AND expr
   50     | expr OPERATOR_AND expr .
   51     | expr . OPERATOR_OR expr

    OPERATOR_LE   shift, and go to state 74
    OPERATOR_GE   shift, and go to state 75
    OPERATOR_EQ   shift, and go to state 76
    OPERATOR_DIF  shift, and go to state 77
    '<'           shift, and go to state 80
    '>'           shift, and go to state 81
    '+'           shift, and go to state 82
    '-'           shift, and go to state 83
    '*'           shift, and go to state 84
    '/'           shift, and go to state 85

    $default  reduce using rule 50 (expr)


state 105

   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . OPERATOR_LE expr
   47     | expr . OPERATOR_GE expr
   48     | expr . OPERATOR_EQ expr
   49     | expr . OPERATOR_DIF expr
   50     | expr . OPERATOR_AND expr
   51     | expr . OPERATOR_OR expr
   51     | expr OPERATOR_OR expr .

    OPERATOR_LE   shift, and go to state 74
    OPERATOR_GE   shift, and go to state 75
    OPERATOR_EQ   shift, and go to state 76
    OPERATOR_DIF  shift, and go to state 77
    '<'           shift, and go to state 80
    '>'           shift, and go to state 81
    '+'           shift, and go to state 82
    '-'           shift, and go to state 83
    '*'           shift, and go to state 84
    '/'           shift, and go to state 85

    $default  reduce using rule 51 (expr)


state 106

   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   44     | expr . '<' expr
   44     | expr '<' expr .
   45     | expr . '>' expr
   46     | expr . OPERATOR_LE expr
   47     | expr . OPERATOR_GE expr
   48     | expr . OPERATOR_EQ expr
   49     | expr . OPERATOR_DIF expr
   50     | expr . OPERATOR_AND expr
   51     | expr . OPERATOR_OR expr

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '*'  shift, and go to state 84
    '/'  shift, and go to state 85

    $default  reduce using rule 44 (expr)


state 107

   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   45     | expr '>' expr .
   46     | expr . OPERATOR_LE expr
   47     | expr . OPERATOR_GE expr
   48     | expr . OPERATOR_EQ expr
   49     | expr . OPERATOR_DIF expr
   50     | expr . OPERATOR_AND expr
   51     | expr . OPERATOR_OR expr

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '*'  shift, and go to state 84
    '/'  shift, and go to state 85

    $default  reduce using rule 45 (expr)


state 108

   40 expr: expr . '+' expr
   40     | expr '+' expr .
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . OPERATOR_LE expr
   47     | expr . OPERATOR_GE expr
   48     | expr . OPERATOR_EQ expr
   49     | expr . OPERATOR_DIF expr
   50     | expr . OPERATOR_AND expr
   51     | expr . OPERATOR_OR expr

    '*'  shift, and go to state 84
    '/'  shift, and go to state 85

    $default  reduce using rule 40 (expr)


state 109

   40 expr: expr . '+' expr
   41     | expr . '-' expr
   41     | expr '-' expr .
   42     | expr . '*' expr
   43     | expr . '/' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . OPERATOR_LE expr
   47     | expr . OPERATOR_GE expr
   48     | expr . OPERATOR_EQ expr
   49     | expr . OPERATOR_DIF expr
   50     | expr . OPERATOR_AND expr
   51     | expr . OPERATOR_OR expr

    '*'  shift, and go to state 84
    '/'  shift, and go to state 85

    $default  reduce using rule 41 (expr)


state 110

   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   42     | expr '*' expr .
   43     | expr . '/' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . OPERATOR_LE expr
   47     | expr . OPERATOR_GE expr
   48     | expr . OPERATOR_EQ expr
   49     | expr . OPERATOR_DIF expr
   50     | expr . OPERATOR_AND expr
   51     | expr . OPERATOR_OR expr

    $default  reduce using rule 42 (expr)


state 111

   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   43     | expr '/' expr .
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . OPERATOR_LE expr
   47     | expr . OPERATOR_GE expr
   48     | expr . OPERATOR_EQ expr
   49     | expr . OPERATOR_DIF expr
   50     | expr . OPERATOR_AND expr
   51     | expr . OPERATOR_OR expr

    $default  reduce using rule 43 (expr)


state 112

   35 attr: TK_IDENTIFIER '[' expr ']' . '=' expr

    '='  shift, and go to state 120


state 113

   59 ctrlflx: KW_IF '(' expr ')' cmd .
   60        | KW_IF '(' expr ')' cmd . KW_ELSE cmd

    KW_ELSE  shift, and go to state 121

    KW_ELSE   [reduce using rule 59 (ctrlflx)]
    $default  reduce using rule 59 (ctrlflx)


state 114

   61 ctrlflx: KW_WHILE '(' expr ')' cmd .

    $default  reduce using rule 61 (ctrlflx)


state 115

   54 expr: KW_INPUT '(' type ')' .

    $default  reduce using rule 54 (expr)


state 116

   37 expr: TK_IDENTIFIER '[' expr ']' .

    $default  reduce using rule 37 (expr)


state 117

   58 l_args_end: ',' . expr l_args_end

    KW_INPUT       shift, and go to state 49
    TK_IDENTIFIER  shift, and go to state 50
    LIT_INT        shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    OPERATOR_NOT   shift, and go to state 52
    '('            shift, and go to state 53

    lit   go to state 54
    expr  go to state 122


state 118

   56 l_args: expr l_args_end .

    $default  reduce using rule 56 (l_args)


state 119

   38 expr: TK_IDENTIFIER '(' l_args ')' .

    $default  reduce using rule 38 (expr)


state 120

   35 attr: TK_IDENTIFIER '[' expr ']' '=' . expr

    KW_INPUT       shift, and go to state 49
    TK_IDENTIFIER  shift, and go to state 50
    LIT_INT        shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    OPERATOR_NOT   shift, and go to state 52
    '('            shift, and go to state 53

    lit   go to state 54
    expr  go to state 123


state 121

   60 ctrlflx: KW_IF '(' expr ')' cmd KW_ELSE . cmd

    KW_IF          shift, and go to state 29
    KW_WHILE       shift, and go to state 30
    KW_PRINT       shift, and go to state 31
    KW_RETURN      shift, and go to state 32
    TK_IDENTIFIER  shift, and go to state 33
    ';'            shift, and go to state 34
    '{'            shift, and go to state 19

    block    go to state 35
    cmd      go to state 124
    attr     go to state 38
    ctrlflx  go to state 39


state 122

   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . OPERATOR_LE expr
   47     | expr . OPERATOR_GE expr
   48     | expr . OPERATOR_EQ expr
   49     | expr . OPERATOR_DIF expr
   50     | expr . OPERATOR_AND expr
   51     | expr . OPERATOR_OR expr
   58 l_args_end: ',' expr . l_args_end

    OPERATOR_LE   shift, and go to state 74
    OPERATOR_GE   shift, and go to state 75
    OPERATOR_EQ   shift, and go to state 76
    OPERATOR_DIF  shift, and go to state 77
    OPERATOR_AND  shift, and go to state 78
    OPERATOR_OR   shift, and go to state 79
    '<'           shift, and go to state 80
    '>'           shift, and go to state 81
    '+'           shift, and go to state 82
    '-'           shift, and go to state 83
    '*'           shift, and go to state 84
    '/'           shift, and go to state 85
    ','           shift, and go to state 117

    $default  reduce using rule 57 (l_args_end)

    l_args_end  go to state 125


state 123

   35 attr: TK_IDENTIFIER '[' expr ']' '=' expr .
   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . OPERATOR_LE expr
   47     | expr . OPERATOR_GE expr
   48     | expr . OPERATOR_EQ expr
   49     | expr . OPERATOR_DIF expr
   50     | expr . OPERATOR_AND expr
   51     | expr . OPERATOR_OR expr

    OPERATOR_LE   shift, and go to state 74
    OPERATOR_GE   shift, and go to state 75
    OPERATOR_EQ   shift, and go to state 76
    OPERATOR_DIF  shift, and go to state 77
    OPERATOR_AND  shift, and go to state 78
    OPERATOR_OR   shift, and go to state 79
    '<'           shift, and go to state 80
    '>'           shift, and go to state 81
    '+'           shift, and go to state 82
    '-'           shift, and go to state 83
    '*'           shift, and go to state 84
    '/'           shift, and go to state 85

    $default  reduce using rule 35 (attr)


state 124

   60 ctrlflx: KW_IF '(' expr ')' cmd KW_ELSE cmd .

    $default  reduce using rule 60 (ctrlflx)


state 125

   58 l_args_end: ',' expr l_args_end .

    $default  reduce using rule 58 (l_args_end)
