Terminals which are not used

   TOKEN_ERROR


State 112 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: ldec lcode

    2 ldec: dec ldec
    3     | /* empty */

    4 dec: type TK_IDENTIFIER '=' lit ';'
    5    | vetdec
    6    | fundec

    7 vetdec: type TK_IDENTIFIER '[' LIT_INT ']' lvec ';'

    8 lvec: lit lvec
    9     | /* empty */

   10 type: KW_INT
   11     | KW_CHAR
   12     | KW_FLOAT

   13 lit: LIT_INT
   14    | LIT_CHAR
   15    | LIT_FLOAT

   16 fundec: type TK_IDENTIFIER '(' firstparam ')' ';'

   17 firstparam: type TK_IDENTIFIER lparam
   18           | /* empty */

   19 lparam: ',' type TK_IDENTIFIER
   20       | /* empty */

   21 lcode: KW_CODE TK_IDENTIFIER block lcode
   22      | /* empty */

   23 block: '{' lcmd '}'

   24 lcmd: cmd lcmd
   25     | /* empty */

   26 cmd: block
   27    | attr ';'
   28    | ctrlflx
   29    | KW_PRINT LIT_STRING ';'
   30    | KW_PRINT expr ';'
   31    | KW_RETURN expr ';'
   32    | ';'

   33 attr: TK_IDENTIFIER '=' expr
   34     | TK_IDENTIFIER '[' expr ']' '=' expr

   35 expr: TK_IDENTIFIER
   36     | TK_IDENTIFIER '[' expr ']'
   37     | TK_IDENTIFIER '(' l_args ')'
   38     | lit
   39     | expr '+' expr
   40     | expr '-' expr
   41     | expr '*' expr
   42     | expr '/' expr
   43     | expr '<' expr
   44     | expr '>' expr
   45     | expr OPERATOR_LE expr
   46     | expr OPERATOR_GE expr
   47     | expr OPERATOR_EQ expr
   48     | expr OPERATOR_DIF expr
   49     | expr OPERATOR_AND expr
   50     | expr OPERATOR_OR expr
   51     | OPERATOR_NOT expr
   52     | '(' expr ')'
   53     | KW_INPUT '(' type ')'

   54 l_args: /* empty */
   55       | expr l_args_end

   56 l_args_end: /* empty */
   57           | ',' expr l_args_end

   58 ctrlflx: KW_IF '(' expr ')' cmd
   59        | KW_IF '(' expr ')' cmd KW_ELSE cmd
   60        | KW_WHILE '(' expr ')' cmd


Terminals, with rules where they appear

$end (0) 0
'(' (40) 16 37 52 53 58 59 60
')' (41) 16 37 52 53 58 59 60
'*' (42) 41
'+' (43) 39
',' (44) 19 57
'-' (45) 40
'/' (47) 42
';' (59) 4 7 16 27 29 30 31 32
'<' (60) 43
'=' (61) 4 33 34
'>' (62) 44
'[' (91) 7 34 36
']' (93) 7 34 36
'{' (123) 23
'}' (125) 23
error (256)
KW_CHAR (258) 11
KW_INT (259) 10
KW_FLOAT (260) 12
KW_CODE (261) 21
KW_IF (262) 58 59
KW_ELSE (263) 59
KW_WHILE (264) 60
KW_INPUT (265) 53
KW_PRINT (266) 29 30
KW_RETURN (267) 31
OPERATOR_LE (268) 45
OPERATOR_GE (269) 46
OPERATOR_EQ (270) 47
OPERATOR_DIF (271) 48
TK_IDENTIFIER (272) 4 7 16 17 19 21 33 34 35 36 37
LIT_INT (273) 7 13
LIT_FLOAT (274) 15
LIT_CHAR (275) 14
LIT_STRING (276) 29
TOKEN_ERROR (277)
OPERATOR_NOT (278) 51
OPERATOR_AND (279) 49
OPERATOR_OR (280) 50


Nonterminals, with rules where they appear

$accept (41)
    on left: 0
program (42)
    on left: 1, on right: 0
ldec (43)
    on left: 2 3, on right: 1 2
dec (44)
    on left: 4 5 6, on right: 2
vetdec (45)
    on left: 7, on right: 5
lvec (46)
    on left: 8 9, on right: 7 8
type (47)
    on left: 10 11 12, on right: 4 7 16 17 19 53
lit (48)
    on left: 13 14 15, on right: 4 8 38
fundec (49)
    on left: 16, on right: 6
firstparam (50)
    on left: 17 18, on right: 16
lparam (51)
    on left: 19 20, on right: 17
lcode (52)
    on left: 21 22, on right: 1 21
block (53)
    on left: 23, on right: 21 26
lcmd (54)
    on left: 24 25, on right: 23 24
cmd (55)
    on left: 26 27 28 29 30 31 32, on right: 24 58 59 60
attr (56)
    on left: 33 34, on right: 27
expr (57)
    on left: 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52
    53, on right: 30 31 33 34 36 39 40 41 42 43 44 45 46 47 48 49 50
    51 52 55 57 58 59 60
l_args (58)
    on left: 54 55, on right: 37
l_args_end (59)
    on left: 56 57, on right: 55 57
ctrlflx (60)
    on left: 58 59 60, on right: 28


state 0

    0 $accept: . program $end

    KW_CHAR   shift, and go to state 1
    KW_INT    shift, and go to state 2
    KW_FLOAT  shift, and go to state 3

    $default  reduce using rule 3 (ldec)

    program  go to state 4
    ldec     go to state 5
    dec      go to state 6
    vetdec   go to state 7
    type     go to state 8
    fundec   go to state 9


state 1

   11 type: KW_CHAR .

    $default  reduce using rule 11 (type)


state 2

   10 type: KW_INT .

    $default  reduce using rule 10 (type)


state 3

   12 type: KW_FLOAT .

    $default  reduce using rule 12 (type)


state 4

    0 $accept: program . $end

    $end  shift, and go to state 10


state 5

    1 program: ldec . lcode

    KW_CODE  shift, and go to state 11

    $default  reduce using rule 22 (lcode)

    lcode  go to state 12


state 6

    2 ldec: dec . ldec

    KW_CHAR   shift, and go to state 1
    KW_INT    shift, and go to state 2
    KW_FLOAT  shift, and go to state 3

    $default  reduce using rule 3 (ldec)

    ldec    go to state 13
    dec     go to state 6
    vetdec  go to state 7
    type    go to state 8
    fundec  go to state 9


state 7

    5 dec: vetdec .

    $default  reduce using rule 5 (dec)


state 8

    4 dec: type . TK_IDENTIFIER '=' lit ';'
    7 vetdec: type . TK_IDENTIFIER '[' LIT_INT ']' lvec ';'
   16 fundec: type . TK_IDENTIFIER '(' firstparam ')' ';'

    TK_IDENTIFIER  shift, and go to state 14


state 9

    6 dec: fundec .

    $default  reduce using rule 6 (dec)


state 10

    0 $accept: program $end .

    $default  accept


state 11

   21 lcode: KW_CODE . TK_IDENTIFIER block lcode

    TK_IDENTIFIER  shift, and go to state 15


state 12

    1 program: ldec lcode .

    $default  reduce using rule 1 (program)


state 13

    2 ldec: dec ldec .

    $default  reduce using rule 2 (ldec)


state 14

    4 dec: type TK_IDENTIFIER . '=' lit ';'
    7 vetdec: type TK_IDENTIFIER . '[' LIT_INT ']' lvec ';'
   16 fundec: type TK_IDENTIFIER . '(' firstparam ')' ';'

    '='  shift, and go to state 16
    '['  shift, and go to state 17
    '('  shift, and go to state 18


state 15

   21 lcode: KW_CODE TK_IDENTIFIER . block lcode

    '{'  shift, and go to state 19

    block  go to state 20


state 16

    4 dec: type TK_IDENTIFIER '=' . lit ';'

    LIT_INT    shift, and go to state 21
    LIT_FLOAT  shift, and go to state 22
    LIT_CHAR   shift, and go to state 23

    lit  go to state 24


state 17

    7 vetdec: type TK_IDENTIFIER '[' . LIT_INT ']' lvec ';'

    LIT_INT  shift, and go to state 25


state 18

   16 fundec: type TK_IDENTIFIER '(' . firstparam ')' ';'

    KW_CHAR   shift, and go to state 1
    KW_INT    shift, and go to state 2
    KW_FLOAT  shift, and go to state 3

    $default  reduce using rule 18 (firstparam)

    type        go to state 26
    firstparam  go to state 27


state 19

   23 block: '{' . lcmd '}'

    KW_IF          shift, and go to state 28
    KW_WHILE       shift, and go to state 29
    KW_PRINT       shift, and go to state 30
    KW_RETURN      shift, and go to state 31
    TK_IDENTIFIER  shift, and go to state 32
    ';'            shift, and go to state 33
    '{'            shift, and go to state 19

    $default  reduce using rule 25 (lcmd)

    block    go to state 34
    lcmd     go to state 35
    cmd      go to state 36
    attr     go to state 37
    ctrlflx  go to state 38


state 20

   21 lcode: KW_CODE TK_IDENTIFIER block . lcode

    KW_CODE  shift, and go to state 11

    $default  reduce using rule 22 (lcode)

    lcode  go to state 39


state 21

   13 lit: LIT_INT .

    $default  reduce using rule 13 (lit)


state 22

   15 lit: LIT_FLOAT .

    $default  reduce using rule 15 (lit)


state 23

   14 lit: LIT_CHAR .

    $default  reduce using rule 14 (lit)


state 24

    4 dec: type TK_IDENTIFIER '=' lit . ';'

    ';'  shift, and go to state 40


state 25

    7 vetdec: type TK_IDENTIFIER '[' LIT_INT . ']' lvec ';'

    ']'  shift, and go to state 41


state 26

   17 firstparam: type . TK_IDENTIFIER lparam

    TK_IDENTIFIER  shift, and go to state 42


state 27

   16 fundec: type TK_IDENTIFIER '(' firstparam . ')' ';'

    ')'  shift, and go to state 43


state 28

   58 ctrlflx: KW_IF . '(' expr ')' cmd
   59        | KW_IF . '(' expr ')' cmd KW_ELSE cmd

    '('  shift, and go to state 44


state 29

   60 ctrlflx: KW_WHILE . '(' expr ')' cmd

    '('  shift, and go to state 45


state 30

   29 cmd: KW_PRINT . LIT_STRING ';'
   30    | KW_PRINT . expr ';'

    KW_INPUT       shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INT        shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 48
    OPERATOR_NOT   shift, and go to state 49
    '('            shift, and go to state 50

    lit   go to state 51
    expr  go to state 52


state 31

   31 cmd: KW_RETURN . expr ';'

    KW_INPUT       shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INT        shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    OPERATOR_NOT   shift, and go to state 49
    '('            shift, and go to state 50

    lit   go to state 51
    expr  go to state 53


state 32

   33 attr: TK_IDENTIFIER . '=' expr
   34     | TK_IDENTIFIER . '[' expr ']' '=' expr

    '='  shift, and go to state 54
    '['  shift, and go to state 55


state 33

   32 cmd: ';' .

    $default  reduce using rule 32 (cmd)


state 34

   26 cmd: block .

    $default  reduce using rule 26 (cmd)


state 35

   23 block: '{' lcmd . '}'

    '}'  shift, and go to state 56


state 36

   24 lcmd: cmd . lcmd

    KW_IF          shift, and go to state 28
    KW_WHILE       shift, and go to state 29
    KW_PRINT       shift, and go to state 30
    KW_RETURN      shift, and go to state 31
    TK_IDENTIFIER  shift, and go to state 32
    ';'            shift, and go to state 33
    '{'            shift, and go to state 19

    $default  reduce using rule 25 (lcmd)

    block    go to state 34
    lcmd     go to state 57
    cmd      go to state 36
    attr     go to state 37
    ctrlflx  go to state 38


state 37

   27 cmd: attr . ';'

    ';'  shift, and go to state 58


state 38

   28 cmd: ctrlflx .

    $default  reduce using rule 28 (cmd)


state 39

   21 lcode: KW_CODE TK_IDENTIFIER block lcode .

    $default  reduce using rule 21 (lcode)


state 40

    4 dec: type TK_IDENTIFIER '=' lit ';' .

    $default  reduce using rule 4 (dec)


state 41

    7 vetdec: type TK_IDENTIFIER '[' LIT_INT ']' . lvec ';'

    LIT_INT    shift, and go to state 21
    LIT_FLOAT  shift, and go to state 22
    LIT_CHAR   shift, and go to state 23

    $default  reduce using rule 9 (lvec)

    lvec  go to state 59
    lit   go to state 60


state 42

   17 firstparam: type TK_IDENTIFIER . lparam

    ','  shift, and go to state 61

    $default  reduce using rule 20 (lparam)

    lparam  go to state 62


state 43

   16 fundec: type TK_IDENTIFIER '(' firstparam ')' . ';'

    ';'  shift, and go to state 63


state 44

   58 ctrlflx: KW_IF '(' . expr ')' cmd
   59        | KW_IF '(' . expr ')' cmd KW_ELSE cmd

    KW_INPUT       shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INT        shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    OPERATOR_NOT   shift, and go to state 49
    '('            shift, and go to state 50

    lit   go to state 51
    expr  go to state 64


state 45

   60 ctrlflx: KW_WHILE '(' . expr ')' cmd

    KW_INPUT       shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INT        shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    OPERATOR_NOT   shift, and go to state 49
    '('            shift, and go to state 50

    lit   go to state 51
    expr  go to state 65


state 46

   53 expr: KW_INPUT . '(' type ')'

    '('  shift, and go to state 66


state 47

   35 expr: TK_IDENTIFIER .
   36     | TK_IDENTIFIER . '[' expr ']'
   37     | TK_IDENTIFIER . '(' l_args ')'

    '['  shift, and go to state 67
    '('  shift, and go to state 68

    $default  reduce using rule 35 (expr)


state 48

   29 cmd: KW_PRINT LIT_STRING . ';'

    ';'  shift, and go to state 69


state 49

   51 expr: OPERATOR_NOT . expr

    KW_INPUT       shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INT        shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    OPERATOR_NOT   shift, and go to state 49
    '('            shift, and go to state 50

    lit   go to state 51
    expr  go to state 70


state 50

   52 expr: '(' . expr ')'

    KW_INPUT       shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INT        shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    OPERATOR_NOT   shift, and go to state 49
    '('            shift, and go to state 50

    lit   go to state 51
    expr  go to state 71


state 51

   38 expr: lit .

    $default  reduce using rule 38 (expr)


state 52

   30 cmd: KW_PRINT expr . ';'
   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '<' expr
   44     | expr . '>' expr
   45     | expr . OPERATOR_LE expr
   46     | expr . OPERATOR_GE expr
   47     | expr . OPERATOR_EQ expr
   48     | expr . OPERATOR_DIF expr
   49     | expr . OPERATOR_AND expr
   50     | expr . OPERATOR_OR expr

    OPERATOR_LE   shift, and go to state 72
    OPERATOR_GE   shift, and go to state 73
    OPERATOR_EQ   shift, and go to state 74
    OPERATOR_DIF  shift, and go to state 75
    OPERATOR_AND  shift, and go to state 76
    OPERATOR_OR   shift, and go to state 77
    '<'           shift, and go to state 78
    '>'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    ';'           shift, and go to state 84


state 53

   31 cmd: KW_RETURN expr . ';'
   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '<' expr
   44     | expr . '>' expr
   45     | expr . OPERATOR_LE expr
   46     | expr . OPERATOR_GE expr
   47     | expr . OPERATOR_EQ expr
   48     | expr . OPERATOR_DIF expr
   49     | expr . OPERATOR_AND expr
   50     | expr . OPERATOR_OR expr

    OPERATOR_LE   shift, and go to state 72
    OPERATOR_GE   shift, and go to state 73
    OPERATOR_EQ   shift, and go to state 74
    OPERATOR_DIF  shift, and go to state 75
    OPERATOR_AND  shift, and go to state 76
    OPERATOR_OR   shift, and go to state 77
    '<'           shift, and go to state 78
    '>'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    ';'           shift, and go to state 85


state 54

   33 attr: TK_IDENTIFIER '=' . expr

    KW_INPUT       shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INT        shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    OPERATOR_NOT   shift, and go to state 49
    '('            shift, and go to state 50

    lit   go to state 51
    expr  go to state 86


state 55

   34 attr: TK_IDENTIFIER '[' . expr ']' '=' expr

    KW_INPUT       shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INT        shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    OPERATOR_NOT   shift, and go to state 49
    '('            shift, and go to state 50

    lit   go to state 51
    expr  go to state 87


state 56

   23 block: '{' lcmd '}' .

    $default  reduce using rule 23 (block)


state 57

   24 lcmd: cmd lcmd .

    $default  reduce using rule 24 (lcmd)


state 58

   27 cmd: attr ';' .

    $default  reduce using rule 27 (cmd)


state 59

    7 vetdec: type TK_IDENTIFIER '[' LIT_INT ']' lvec . ';'

    ';'  shift, and go to state 88


state 60

    8 lvec: lit . lvec

    LIT_INT    shift, and go to state 21
    LIT_FLOAT  shift, and go to state 22
    LIT_CHAR   shift, and go to state 23

    $default  reduce using rule 9 (lvec)

    lvec  go to state 89
    lit   go to state 60


state 61

   19 lparam: ',' . type TK_IDENTIFIER

    KW_CHAR   shift, and go to state 1
    KW_INT    shift, and go to state 2
    KW_FLOAT  shift, and go to state 3

    type  go to state 90


state 62

   17 firstparam: type TK_IDENTIFIER lparam .

    $default  reduce using rule 17 (firstparam)


state 63

   16 fundec: type TK_IDENTIFIER '(' firstparam ')' ';' .

    $default  reduce using rule 16 (fundec)


state 64

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '<' expr
   44     | expr . '>' expr
   45     | expr . OPERATOR_LE expr
   46     | expr . OPERATOR_GE expr
   47     | expr . OPERATOR_EQ expr
   48     | expr . OPERATOR_DIF expr
   49     | expr . OPERATOR_AND expr
   50     | expr . OPERATOR_OR expr
   58 ctrlflx: KW_IF '(' expr . ')' cmd
   59        | KW_IF '(' expr . ')' cmd KW_ELSE cmd

    OPERATOR_LE   shift, and go to state 72
    OPERATOR_GE   shift, and go to state 73
    OPERATOR_EQ   shift, and go to state 74
    OPERATOR_DIF  shift, and go to state 75
    OPERATOR_AND  shift, and go to state 76
    OPERATOR_OR   shift, and go to state 77
    '<'           shift, and go to state 78
    '>'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    ')'           shift, and go to state 91


state 65

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '<' expr
   44     | expr . '>' expr
   45     | expr . OPERATOR_LE expr
   46     | expr . OPERATOR_GE expr
   47     | expr . OPERATOR_EQ expr
   48     | expr . OPERATOR_DIF expr
   49     | expr . OPERATOR_AND expr
   50     | expr . OPERATOR_OR expr
   60 ctrlflx: KW_WHILE '(' expr . ')' cmd

    OPERATOR_LE   shift, and go to state 72
    OPERATOR_GE   shift, and go to state 73
    OPERATOR_EQ   shift, and go to state 74
    OPERATOR_DIF  shift, and go to state 75
    OPERATOR_AND  shift, and go to state 76
    OPERATOR_OR   shift, and go to state 77
    '<'           shift, and go to state 78
    '>'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    ')'           shift, and go to state 92


state 66

   53 expr: KW_INPUT '(' . type ')'

    KW_CHAR   shift, and go to state 1
    KW_INT    shift, and go to state 2
    KW_FLOAT  shift, and go to state 3

    type  go to state 93


state 67

   36 expr: TK_IDENTIFIER '[' . expr ']'

    KW_INPUT       shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INT        shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    OPERATOR_NOT   shift, and go to state 49
    '('            shift, and go to state 50

    lit   go to state 51
    expr  go to state 94


state 68

   37 expr: TK_IDENTIFIER '(' . l_args ')'

    KW_INPUT       shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INT        shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    OPERATOR_NOT   shift, and go to state 49
    '('            shift, and go to state 50

    $default  reduce using rule 54 (l_args)

    lit     go to state 51
    expr    go to state 95
    l_args  go to state 96


state 69

   29 cmd: KW_PRINT LIT_STRING ';' .

    $default  reduce using rule 29 (cmd)


state 70

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '<' expr
   44     | expr . '>' expr
   45     | expr . OPERATOR_LE expr
   46     | expr . OPERATOR_GE expr
   47     | expr . OPERATOR_EQ expr
   48     | expr . OPERATOR_DIF expr
   49     | expr . OPERATOR_AND expr
   50     | expr . OPERATOR_OR expr
   51     | OPERATOR_NOT expr .

    OPERATOR_LE   shift, and go to state 72
    OPERATOR_GE   shift, and go to state 73
    OPERATOR_EQ   shift, and go to state 74
    OPERATOR_DIF  shift, and go to state 75
    '<'           shift, and go to state 78
    '>'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83

    $default  reduce using rule 51 (expr)


state 71

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '<' expr
   44     | expr . '>' expr
   45     | expr . OPERATOR_LE expr
   46     | expr . OPERATOR_GE expr
   47     | expr . OPERATOR_EQ expr
   48     | expr . OPERATOR_DIF expr
   49     | expr . OPERATOR_AND expr
   50     | expr . OPERATOR_OR expr
   52     | '(' expr . ')'

    OPERATOR_LE   shift, and go to state 72
    OPERATOR_GE   shift, and go to state 73
    OPERATOR_EQ   shift, and go to state 74
    OPERATOR_DIF  shift, and go to state 75
    OPERATOR_AND  shift, and go to state 76
    OPERATOR_OR   shift, and go to state 77
    '<'           shift, and go to state 78
    '>'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    ')'           shift, and go to state 97


state 72

   45 expr: expr OPERATOR_LE . expr

    KW_INPUT       shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INT        shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    OPERATOR_NOT   shift, and go to state 49
    '('            shift, and go to state 50

    lit   go to state 51
    expr  go to state 98


state 73

   46 expr: expr OPERATOR_GE . expr

    KW_INPUT       shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INT        shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    OPERATOR_NOT   shift, and go to state 49
    '('            shift, and go to state 50

    lit   go to state 51
    expr  go to state 99


state 74

   47 expr: expr OPERATOR_EQ . expr

    KW_INPUT       shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INT        shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    OPERATOR_NOT   shift, and go to state 49
    '('            shift, and go to state 50

    lit   go to state 51
    expr  go to state 100


state 75

   48 expr: expr OPERATOR_DIF . expr

    KW_INPUT       shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INT        shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    OPERATOR_NOT   shift, and go to state 49
    '('            shift, and go to state 50

    lit   go to state 51
    expr  go to state 101


state 76

   49 expr: expr OPERATOR_AND . expr

    KW_INPUT       shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INT        shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    OPERATOR_NOT   shift, and go to state 49
    '('            shift, and go to state 50

    lit   go to state 51
    expr  go to state 102


state 77

   50 expr: expr OPERATOR_OR . expr

    KW_INPUT       shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INT        shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    OPERATOR_NOT   shift, and go to state 49
    '('            shift, and go to state 50

    lit   go to state 51
    expr  go to state 103


state 78

   43 expr: expr '<' . expr

    KW_INPUT       shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INT        shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    OPERATOR_NOT   shift, and go to state 49
    '('            shift, and go to state 50

    lit   go to state 51
    expr  go to state 104


state 79

   44 expr: expr '>' . expr

    KW_INPUT       shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INT        shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    OPERATOR_NOT   shift, and go to state 49
    '('            shift, and go to state 50

    lit   go to state 51
    expr  go to state 105


state 80

   39 expr: expr '+' . expr

    KW_INPUT       shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INT        shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    OPERATOR_NOT   shift, and go to state 49
    '('            shift, and go to state 50

    lit   go to state 51
    expr  go to state 106


state 81

   40 expr: expr '-' . expr

    KW_INPUT       shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INT        shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    OPERATOR_NOT   shift, and go to state 49
    '('            shift, and go to state 50

    lit   go to state 51
    expr  go to state 107


state 82

   41 expr: expr '*' . expr

    KW_INPUT       shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INT        shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    OPERATOR_NOT   shift, and go to state 49
    '('            shift, and go to state 50

    lit   go to state 51
    expr  go to state 108


state 83

   42 expr: expr '/' . expr

    KW_INPUT       shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INT        shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    OPERATOR_NOT   shift, and go to state 49
    '('            shift, and go to state 50

    lit   go to state 51
    expr  go to state 109


state 84

   30 cmd: KW_PRINT expr ';' .

    $default  reduce using rule 30 (cmd)


state 85

   31 cmd: KW_RETURN expr ';' .

    $default  reduce using rule 31 (cmd)


state 86

   33 attr: TK_IDENTIFIER '=' expr .
   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '<' expr
   44     | expr . '>' expr
   45     | expr . OPERATOR_LE expr
   46     | expr . OPERATOR_GE expr
   47     | expr . OPERATOR_EQ expr
   48     | expr . OPERATOR_DIF expr
   49     | expr . OPERATOR_AND expr
   50     | expr . OPERATOR_OR expr

    OPERATOR_LE   shift, and go to state 72
    OPERATOR_GE   shift, and go to state 73
    OPERATOR_EQ   shift, and go to state 74
    OPERATOR_DIF  shift, and go to state 75
    OPERATOR_AND  shift, and go to state 76
    OPERATOR_OR   shift, and go to state 77
    '<'           shift, and go to state 78
    '>'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83

    $default  reduce using rule 33 (attr)


state 87

   34 attr: TK_IDENTIFIER '[' expr . ']' '=' expr
   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '<' expr
   44     | expr . '>' expr
   45     | expr . OPERATOR_LE expr
   46     | expr . OPERATOR_GE expr
   47     | expr . OPERATOR_EQ expr
   48     | expr . OPERATOR_DIF expr
   49     | expr . OPERATOR_AND expr
   50     | expr . OPERATOR_OR expr

    OPERATOR_LE   shift, and go to state 72
    OPERATOR_GE   shift, and go to state 73
    OPERATOR_EQ   shift, and go to state 74
    OPERATOR_DIF  shift, and go to state 75
    OPERATOR_AND  shift, and go to state 76
    OPERATOR_OR   shift, and go to state 77
    '<'           shift, and go to state 78
    '>'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    ']'           shift, and go to state 110


state 88

    7 vetdec: type TK_IDENTIFIER '[' LIT_INT ']' lvec ';' .

    $default  reduce using rule 7 (vetdec)


state 89

    8 lvec: lit lvec .

    $default  reduce using rule 8 (lvec)


state 90

   19 lparam: ',' type . TK_IDENTIFIER

    TK_IDENTIFIER  shift, and go to state 111


state 91

   58 ctrlflx: KW_IF '(' expr ')' . cmd
   59        | KW_IF '(' expr ')' . cmd KW_ELSE cmd

    KW_IF          shift, and go to state 28
    KW_WHILE       shift, and go to state 29
    KW_PRINT       shift, and go to state 30
    KW_RETURN      shift, and go to state 31
    TK_IDENTIFIER  shift, and go to state 32
    ';'            shift, and go to state 33
    '{'            shift, and go to state 19

    block    go to state 34
    cmd      go to state 112
    attr     go to state 37
    ctrlflx  go to state 38


state 92

   60 ctrlflx: KW_WHILE '(' expr ')' . cmd

    KW_IF          shift, and go to state 28
    KW_WHILE       shift, and go to state 29
    KW_PRINT       shift, and go to state 30
    KW_RETURN      shift, and go to state 31
    TK_IDENTIFIER  shift, and go to state 32
    ';'            shift, and go to state 33
    '{'            shift, and go to state 19

    block    go to state 34
    cmd      go to state 113
    attr     go to state 37
    ctrlflx  go to state 38


state 93

   53 expr: KW_INPUT '(' type . ')'

    ')'  shift, and go to state 114


state 94

   36 expr: TK_IDENTIFIER '[' expr . ']'
   39     | expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '<' expr
   44     | expr . '>' expr
   45     | expr . OPERATOR_LE expr
   46     | expr . OPERATOR_GE expr
   47     | expr . OPERATOR_EQ expr
   48     | expr . OPERATOR_DIF expr
   49     | expr . OPERATOR_AND expr
   50     | expr . OPERATOR_OR expr

    OPERATOR_LE   shift, and go to state 72
    OPERATOR_GE   shift, and go to state 73
    OPERATOR_EQ   shift, and go to state 74
    OPERATOR_DIF  shift, and go to state 75
    OPERATOR_AND  shift, and go to state 76
    OPERATOR_OR   shift, and go to state 77
    '<'           shift, and go to state 78
    '>'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    ']'           shift, and go to state 115


state 95

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '<' expr
   44     | expr . '>' expr
   45     | expr . OPERATOR_LE expr
   46     | expr . OPERATOR_GE expr
   47     | expr . OPERATOR_EQ expr
   48     | expr . OPERATOR_DIF expr
   49     | expr . OPERATOR_AND expr
   50     | expr . OPERATOR_OR expr
   55 l_args: expr . l_args_end

    OPERATOR_LE   shift, and go to state 72
    OPERATOR_GE   shift, and go to state 73
    OPERATOR_EQ   shift, and go to state 74
    OPERATOR_DIF  shift, and go to state 75
    OPERATOR_AND  shift, and go to state 76
    OPERATOR_OR   shift, and go to state 77
    '<'           shift, and go to state 78
    '>'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    ','           shift, and go to state 116

    $default  reduce using rule 56 (l_args_end)

    l_args_end  go to state 117


state 96

   37 expr: TK_IDENTIFIER '(' l_args . ')'

    ')'  shift, and go to state 118


state 97

   52 expr: '(' expr ')' .

    $default  reduce using rule 52 (expr)


state 98

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '<' expr
   44     | expr . '>' expr
   45     | expr . OPERATOR_LE expr
   45     | expr OPERATOR_LE expr .
   46     | expr . OPERATOR_GE expr
   47     | expr . OPERATOR_EQ expr
   48     | expr . OPERATOR_DIF expr
   49     | expr . OPERATOR_AND expr
   50     | expr . OPERATOR_OR expr

    '+'  shift, and go to state 80
    '-'  shift, and go to state 81
    '*'  shift, and go to state 82
    '/'  shift, and go to state 83

    $default  reduce using rule 45 (expr)


state 99

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '<' expr
   44     | expr . '>' expr
   45     | expr . OPERATOR_LE expr
   46     | expr . OPERATOR_GE expr
   46     | expr OPERATOR_GE expr .
   47     | expr . OPERATOR_EQ expr
   48     | expr . OPERATOR_DIF expr
   49     | expr . OPERATOR_AND expr
   50     | expr . OPERATOR_OR expr

    '+'  shift, and go to state 80
    '-'  shift, and go to state 81
    '*'  shift, and go to state 82
    '/'  shift, and go to state 83

    $default  reduce using rule 46 (expr)


state 100

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '<' expr
   44     | expr . '>' expr
   45     | expr . OPERATOR_LE expr
   46     | expr . OPERATOR_GE expr
   47     | expr . OPERATOR_EQ expr
   47     | expr OPERATOR_EQ expr .
   48     | expr . OPERATOR_DIF expr
   49     | expr . OPERATOR_AND expr
   50     | expr . OPERATOR_OR expr

    '+'  shift, and go to state 80
    '-'  shift, and go to state 81
    '*'  shift, and go to state 82
    '/'  shift, and go to state 83

    $default  reduce using rule 47 (expr)


state 101

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '<' expr
   44     | expr . '>' expr
   45     | expr . OPERATOR_LE expr
   46     | expr . OPERATOR_GE expr
   47     | expr . OPERATOR_EQ expr
   48     | expr . OPERATOR_DIF expr
   48     | expr OPERATOR_DIF expr .
   49     | expr . OPERATOR_AND expr
   50     | expr . OPERATOR_OR expr

    '+'  shift, and go to state 80
    '-'  shift, and go to state 81
    '*'  shift, and go to state 82
    '/'  shift, and go to state 83

    $default  reduce using rule 48 (expr)


state 102

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '<' expr
   44     | expr . '>' expr
   45     | expr . OPERATOR_LE expr
   46     | expr . OPERATOR_GE expr
   47     | expr . OPERATOR_EQ expr
   48     | expr . OPERATOR_DIF expr
   49     | expr . OPERATOR_AND expr
   49     | expr OPERATOR_AND expr .
   50     | expr . OPERATOR_OR expr

    OPERATOR_LE   shift, and go to state 72
    OPERATOR_GE   shift, and go to state 73
    OPERATOR_EQ   shift, and go to state 74
    OPERATOR_DIF  shift, and go to state 75
    '<'           shift, and go to state 78
    '>'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83

    $default  reduce using rule 49 (expr)


state 103

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '<' expr
   44     | expr . '>' expr
   45     | expr . OPERATOR_LE expr
   46     | expr . OPERATOR_GE expr
   47     | expr . OPERATOR_EQ expr
   48     | expr . OPERATOR_DIF expr
   49     | expr . OPERATOR_AND expr
   50     | expr . OPERATOR_OR expr
   50     | expr OPERATOR_OR expr .

    OPERATOR_LE   shift, and go to state 72
    OPERATOR_GE   shift, and go to state 73
    OPERATOR_EQ   shift, and go to state 74
    OPERATOR_DIF  shift, and go to state 75
    '<'           shift, and go to state 78
    '>'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83

    $default  reduce using rule 50 (expr)


state 104

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '<' expr
   43     | expr '<' expr .
   44     | expr . '>' expr
   45     | expr . OPERATOR_LE expr
   46     | expr . OPERATOR_GE expr
   47     | expr . OPERATOR_EQ expr
   48     | expr . OPERATOR_DIF expr
   49     | expr . OPERATOR_AND expr
   50     | expr . OPERATOR_OR expr

    '+'  shift, and go to state 80
    '-'  shift, and go to state 81
    '*'  shift, and go to state 82
    '/'  shift, and go to state 83

    $default  reduce using rule 43 (expr)


state 105

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '<' expr
   44     | expr . '>' expr
   44     | expr '>' expr .
   45     | expr . OPERATOR_LE expr
   46     | expr . OPERATOR_GE expr
   47     | expr . OPERATOR_EQ expr
   48     | expr . OPERATOR_DIF expr
   49     | expr . OPERATOR_AND expr
   50     | expr . OPERATOR_OR expr

    '+'  shift, and go to state 80
    '-'  shift, and go to state 81
    '*'  shift, and go to state 82
    '/'  shift, and go to state 83

    $default  reduce using rule 44 (expr)


state 106

   39 expr: expr . '+' expr
   39     | expr '+' expr .
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '<' expr
   44     | expr . '>' expr
   45     | expr . OPERATOR_LE expr
   46     | expr . OPERATOR_GE expr
   47     | expr . OPERATOR_EQ expr
   48     | expr . OPERATOR_DIF expr
   49     | expr . OPERATOR_AND expr
   50     | expr . OPERATOR_OR expr

    '*'  shift, and go to state 82
    '/'  shift, and go to state 83

    $default  reduce using rule 39 (expr)


state 107

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   40     | expr '-' expr .
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '<' expr
   44     | expr . '>' expr
   45     | expr . OPERATOR_LE expr
   46     | expr . OPERATOR_GE expr
   47     | expr . OPERATOR_EQ expr
   48     | expr . OPERATOR_DIF expr
   49     | expr . OPERATOR_AND expr
   50     | expr . OPERATOR_OR expr

    '*'  shift, and go to state 82
    '/'  shift, and go to state 83

    $default  reduce using rule 40 (expr)


state 108

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   41     | expr '*' expr .
   42     | expr . '/' expr
   43     | expr . '<' expr
   44     | expr . '>' expr
   45     | expr . OPERATOR_LE expr
   46     | expr . OPERATOR_GE expr
   47     | expr . OPERATOR_EQ expr
   48     | expr . OPERATOR_DIF expr
   49     | expr . OPERATOR_AND expr
   50     | expr . OPERATOR_OR expr

    $default  reduce using rule 41 (expr)


state 109

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   42     | expr '/' expr .
   43     | expr . '<' expr
   44     | expr . '>' expr
   45     | expr . OPERATOR_LE expr
   46     | expr . OPERATOR_GE expr
   47     | expr . OPERATOR_EQ expr
   48     | expr . OPERATOR_DIF expr
   49     | expr . OPERATOR_AND expr
   50     | expr . OPERATOR_OR expr

    $default  reduce using rule 42 (expr)


state 110

   34 attr: TK_IDENTIFIER '[' expr ']' . '=' expr

    '='  shift, and go to state 119


state 111

   19 lparam: ',' type TK_IDENTIFIER .

    $default  reduce using rule 19 (lparam)


state 112

   58 ctrlflx: KW_IF '(' expr ')' cmd .
   59        | KW_IF '(' expr ')' cmd . KW_ELSE cmd

    KW_ELSE  shift, and go to state 120

    KW_ELSE   [reduce using rule 58 (ctrlflx)]
    $default  reduce using rule 58 (ctrlflx)


state 113

   60 ctrlflx: KW_WHILE '(' expr ')' cmd .

    $default  reduce using rule 60 (ctrlflx)


state 114

   53 expr: KW_INPUT '(' type ')' .

    $default  reduce using rule 53 (expr)


state 115

   36 expr: TK_IDENTIFIER '[' expr ']' .

    $default  reduce using rule 36 (expr)


state 116

   57 l_args_end: ',' . expr l_args_end

    KW_INPUT       shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INT        shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    OPERATOR_NOT   shift, and go to state 49
    '('            shift, and go to state 50

    lit   go to state 51
    expr  go to state 121


state 117

   55 l_args: expr l_args_end .

    $default  reduce using rule 55 (l_args)


state 118

   37 expr: TK_IDENTIFIER '(' l_args ')' .

    $default  reduce using rule 37 (expr)


state 119

   34 attr: TK_IDENTIFIER '[' expr ']' '=' . expr

    KW_INPUT       shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INT        shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    OPERATOR_NOT   shift, and go to state 49
    '('            shift, and go to state 50

    lit   go to state 51
    expr  go to state 122


state 120

   59 ctrlflx: KW_IF '(' expr ')' cmd KW_ELSE . cmd

    KW_IF          shift, and go to state 28
    KW_WHILE       shift, and go to state 29
    KW_PRINT       shift, and go to state 30
    KW_RETURN      shift, and go to state 31
    TK_IDENTIFIER  shift, and go to state 32
    ';'            shift, and go to state 33
    '{'            shift, and go to state 19

    block    go to state 34
    cmd      go to state 123
    attr     go to state 37
    ctrlflx  go to state 38


state 121

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '<' expr
   44     | expr . '>' expr
   45     | expr . OPERATOR_LE expr
   46     | expr . OPERATOR_GE expr
   47     | expr . OPERATOR_EQ expr
   48     | expr . OPERATOR_DIF expr
   49     | expr . OPERATOR_AND expr
   50     | expr . OPERATOR_OR expr
   57 l_args_end: ',' expr . l_args_end

    OPERATOR_LE   shift, and go to state 72
    OPERATOR_GE   shift, and go to state 73
    OPERATOR_EQ   shift, and go to state 74
    OPERATOR_DIF  shift, and go to state 75
    OPERATOR_AND  shift, and go to state 76
    OPERATOR_OR   shift, and go to state 77
    '<'           shift, and go to state 78
    '>'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    ','           shift, and go to state 116

    $default  reduce using rule 56 (l_args_end)

    l_args_end  go to state 124


state 122

   34 attr: TK_IDENTIFIER '[' expr ']' '=' expr .
   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '<' expr
   44     | expr . '>' expr
   45     | expr . OPERATOR_LE expr
   46     | expr . OPERATOR_GE expr
   47     | expr . OPERATOR_EQ expr
   48     | expr . OPERATOR_DIF expr
   49     | expr . OPERATOR_AND expr
   50     | expr . OPERATOR_OR expr

    OPERATOR_LE   shift, and go to state 72
    OPERATOR_GE   shift, and go to state 73
    OPERATOR_EQ   shift, and go to state 74
    OPERATOR_DIF  shift, and go to state 75
    OPERATOR_AND  shift, and go to state 76
    OPERATOR_OR   shift, and go to state 77
    '<'           shift, and go to state 78
    '>'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83

    $default  reduce using rule 34 (attr)


state 123

   59 ctrlflx: KW_IF '(' expr ')' cmd KW_ELSE cmd .

    $default  reduce using rule 59 (ctrlflx)


state 124

   57 l_args_end: ',' expr l_args_end .

    $default  reduce using rule 57 (l_args_end)
